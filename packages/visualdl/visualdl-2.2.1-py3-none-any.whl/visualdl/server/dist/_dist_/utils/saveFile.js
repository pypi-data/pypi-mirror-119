import u from"../../__snowpack__/pkg/file-saver.js";import w from"../../__snowpack__/pkg/jszip.js";import{fetcher as h}from"./fetch.js";import r from"../../__snowpack__/pkg/lodash/isString.js";import{toast as p}from"../../__snowpack__/pkg/react-toastify.js";async function y(t){const e=await h(t);return e.data instanceof Blob?e.data:r(e)?e:JSON.stringify(e)}function m(t){return t.replace(/[/\\?%*:|"<>]/g,"_")}export function saveFile(t,e){let i;t instanceof Blob?i=t:i=new Blob([t],{type:"text/plain;charset=utf-8"}),u.saveAs(i,m(e))}export default async function(t,e,i="download.zip"){if(!t)return;let l=t,n=e;r(t)&&(l=[t]),r(e)&&(n=[e]);try{const a=await Promise.all(l.map(y));if(a.length===1)saveFile(a[0],n[0]);else{const f=new w;let s="",c="";if(n.length===1){const o=n[0].split(".");o.length>1&&(c=o.pop()),s=o.join(".")}a.forEach((o,_)=>{f.file(m(s?`${s} - ${_}.${c}`:n[_]),o)});const g=await f.generateAsync({type:"blob"});saveFile(g,i)}}catch(a){p(a.message,{position:p.POSITION.TOP_CENTER,type:p.TYPE.ERROR})}}
