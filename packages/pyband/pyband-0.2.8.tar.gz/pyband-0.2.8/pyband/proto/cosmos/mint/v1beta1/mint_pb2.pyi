"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

# Minter represents the minting state.
class Minter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFLATION_FIELD_NUMBER: builtins.int
    ANNUAL_PROVISIONS_FIELD_NUMBER: builtins.int
    # current annual inflation rate
    inflation: typing.Text = ...
    # current annual expected provisions
    annual_provisions: typing.Text = ...
    def __init__(self,
        *,
        inflation : typing.Text = ...,
        annual_provisions : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"annual_provisions",b"annual_provisions",u"inflation",b"inflation"]) -> None: ...
global___Minter = Minter

# Params holds parameters for the mint module.
class Params(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MINT_DENOM_FIELD_NUMBER: builtins.int
    INFLATION_RATE_CHANGE_FIELD_NUMBER: builtins.int
    INFLATION_MAX_FIELD_NUMBER: builtins.int
    INFLATION_MIN_FIELD_NUMBER: builtins.int
    GOAL_BONDED_FIELD_NUMBER: builtins.int
    BLOCKS_PER_YEAR_FIELD_NUMBER: builtins.int
    # type of coin to mint
    mint_denom: typing.Text = ...
    # maximum annual change in inflation rate
    inflation_rate_change: typing.Text = ...
    # maximum inflation rate
    inflation_max: typing.Text = ...
    # minimum inflation rate
    inflation_min: typing.Text = ...
    # goal of percent bonded atoms
    goal_bonded: typing.Text = ...
    # expected blocks per year
    blocks_per_year: builtins.int = ...
    def __init__(self,
        *,
        mint_denom : typing.Text = ...,
        inflation_rate_change : typing.Text = ...,
        inflation_max : typing.Text = ...,
        inflation_min : typing.Text = ...,
        goal_bonded : typing.Text = ...,
        blocks_per_year : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"blocks_per_year",b"blocks_per_year",u"goal_bonded",b"goal_bonded",u"inflation_max",b"inflation_max",u"inflation_min",b"inflation_min",u"inflation_rate_change",b"inflation_rate_change",u"mint_denom",b"mint_denom"]) -> None: ...
global___Params = Params
