define(["jquery","base/js/keyboard","require","base/js/namespace","notebook/js/cell","notebook/js/codecell","module"],(function(e,t,o,n,s,i,r){"use strict";const c="["+r.id+"]";let a,l=.3,u=3e3,p=5e3,d=530,m=12e4,g={is_open:!1,data:{},last_submission:"",current_choice_idx:void 0,choices:[],considering_choices:!1,suggestion_accept_timeout:void 0,version_is_up_to_date:void 0},f=s.Cell,_=i.CodeCell,h=t.keycodes,y=[h.enter,h.esc,h.backspace,h.tab,h.up,h.down,h.shift,h.ctrl,h.alt,h.meta,h.capslock,h.pageup,h.pagedown,h.end,h.home,h.insert,h.delete,h.numlock,h.f1,h.f2,h.f3,h.f4,h.f5,h.f6,h.f7,h.f8,h.f9,h.f10,h.f11,h.f12,h.f13,h.f14,h.f15];const b=e=>{const t=e.split("\n");if(0===t.length)return[0,0];return[t.length,t.slice(-1)[0].length]},k=(e,t,o)=>{e.code_mirror.options[t]=o},v=(e,t,o,n)=>{let s=e.code_mirror;console.log(c,"Setting opacity from",t,"to",o,"to",n),s.markText(t,o,{css:`opacity:${n}`})},x=e=>{const t=b(e);return{line:t[0]-1,ch:t[1]}};const T=e=>{if(!g.considering_choices)return;const t=e.get_text();k(e,"cursorBlinkRate",d),((e,t)=>{const[o,s]=b(t);n.notebook.get_selected_cell().code_mirror.setCursor(o,s)})(0,t),(e=>{k(e,"readOnly",!1)})(e);const o=x(t);v(e,{line:0,ch:0},o,1),g.considering_choices=!1,D(),g.choices=[]},j=()=>{g.considering_choices=!0,L(),void 0!==g.suggestion_accept_timeout&&clearTimeout(g.suggestion_accept_timeout);let e=g.choices[g.current_choice_idx],t=n.notebook.get_selected_cell();e=(e=>{let t=[],o=e.split("\n");for(let e=0;e<o.length;e++){let n=o[e].trimEnd();n.startsWith("# ")&&(n=n.replace("# ","## "),n.endsWith(" ##")||(n+=" ##")),t.push(n)}return t=t.join("\n"),t})(e);const o=(e=>{let t=e.get_text();const o=t.lastIndexOf("##");return t.slice(0,o+2)})(t),s=`${o}\n\n${e}`;t.set_text(s);const i=x(o+"\n\n"),r=x(s);v(t,i,r,l),(e=>{k(e,"readOnly",!0)})(t),k(t,"cursorBlinkRate",-1),g.suggestion_accept_timeout=setTimeout((()=>{T(t)}),u)};function C(e){const t=document.cookie.match("\\b"+e+"=([^;]*)\\b");return t?t[1]:void 0}const S=t=>{t?e("#cogram-spinner").addClass("fa-spin").css("color","orange"):e("#cogram-spinner").removeClass("fa-spin").css("color","green")},w=()=>{const t=n.notebook.get_selected_index();let o=n.notebook.get_cells().map((e=>e.get_text())).slice(0,t+1),s=o.pop();const i=n.notebook.session.id,r=n.notebook.kernel.id;let l={queries:(e=>{let t=[];const o=e.split("\n");for(let e=0;e<o.length;e++){let n=o[e];""!==n&&n.startsWith("## ")&&(n=n.replace("## ",""),n=n.replace(" #",""),n.endsWith("#")&&(n=n.substring(0,n.length-1),n=n.trim()),t.push(n))}return t})(s),cell_contents:o,session_id:i,kernel_id:r,auth_token:a};const u=C("_xsrf");e.post({url:"/cogram",data:JSON.stringify(l),headers:{"X-XSRFToken":u},dataType:"json",contentType:"application/json",beforeSend:function(e){S(!0)},success:function(e){!function(e,t){g.choices=t.message,g.current_choice_idx=0,console.log(c,"starting insertion of first choice"),j()}(0,e)},error:B,complete:function(){S(!1)}})},O=()=>{console.log(c,"Checking if valid token exists..."),e.get({url:"/token",dataType:"JSON",async:!1,success:function(e){return a=e.auth_token,!0},error:function(e,t,o){return((e,t,o)=>{a=void 0,console.log(c,"`checkValidTokenExists` ajax error:",e,t,o)})(e,t,o),!1}});const t=void 0!==a;return console.log(c,"check completed. success",t),t},$=()=>(e("body").on("click","#upgrade_button",(()=>{e("#upgrade_button").html('<i class="fa fa-spinner fa-spin" aria-hidden="true"></i>'),ee()})),'<button id="upgrade_button" class="mui-btn mui-btn--primary">Upgrade</button>'),N=(e,t,o)=>{g.version_is_up_to_date=!1;let n=JSON.parse(e.responseText);console.log(c,n);let s=n?.pypi_version;let i=`<div class="mui--text-subhead">A new version of Jupyter Cogram is out  🎈<span class="mui--text-body2"><div style="line-height:120%;"><br></div>Click here to automatically upgrade to version ${s}</span></div>`+$()+'<span class="mui--text-body1"><br>Alternatively, you can upgrade to manually by running<br><span style="font-family:monospace">pip install -U jupyter-cogram</span> <br>in your terminal. Afterwards, please restart your Jupyter Notebook server.</span>';V(i,m)};let J=function(){console.log(c,"Initializing extension..."),n.toolbar.add_buttons_group([n.keyboard_manager.actions.register({help:"Launch jupyter-cogram",icon:"fas fa-link",handler:W},"create-jupyter-cogram-from-notebook","Cogram")],"cogram-button-group");e(".fas.fa-link.fa").replaceWith('<img id="cogram-button-logo" src="https://uploads-ssl.webflow.com/61294dc1bd225d7c490b4389/6131d7249979f73249363dd0_icon_black_64.png" style="max-height:16px;"alt="Cogram">'),function(){let t=e("<button/>").attr("id","cogram-status").attr("class","btn btn-default").attr("title","Cogram status").attr("style","display: none;"),o=e("<i/>").attr("id","cogram-spinner").attr("style","color: green;").attr("class","fa fa-circle-o-notch");t.append(o),e("#cogram-button-group").append(t)}()};const A=t=>{t?(console.log(c,"Extension is off. Turning it on."),e("#cogram-status").show(),g.is_open=!0):(console.log(c,"Extension is on. Turning it off."),e("#cogram-status").hide(),g.is_open=!1)},K=t=>{console.log("Showing panel with content",t),e("#info-panel-content").remove(),e("#jupyter-cogram-info-panel").append(t),e("#jupyter-cogram-info-panel").show()};function W(){if(g.is_open)return void A(!1);const t=O();console.log(c,"Valid token exists:",t),t?(e("#jupyter-cogram-info-panel").hide(),A(!0)):(K(z()),A(!1))}const E=e=>e.get_text().split("\n")[e.code_mirror.getCursor().line],q=e=>{if(""===e.get_text())return!1;const t=E(e);return t.startsWith("## ")&&t.endsWith(" #")},U=e=>{if(""===e.get_text())return!1;const t=E(e);return t.startsWith("## ")&&t.endsWith(" ##")};function I(e){const o=t.inv_keycodes[e.which];return(e.altKey||e.ctrlKey||e.metaKey||e.shiftKey)&&("alt"===o||"ctrl"===o||"meta"===o||"shift"===o)}function R(e){return e.ctrlKey||e.metaKey}function X(e){const o=e.keyCode;return o===t.keycodes.left||o===t.keycodes.right}const P=e=>{const o=e.keyCode===t.keycodes.right,n=g.current_choice_idx,s=g.choices.length;if(1===s)return;let i;i=o?n<=s-2?n+1:0:n>0?n-1:s-1,g.current_choice_idx=i};function B(e,t,o){console.log("jupyter_cogram ajax error:",e,t,o);const n=`${JSON.parse(e.responseText).message}`;F(n,1e4)}const F=(t,o=2e3)=>{const n=e("#info-panel-content").html();let s=e("<div class='mui--text-body2 alert-message'>"+t+"</div>");e("#info-panel-content").html(s),M(),o&&setTimeout((()=>{n&&e("#info-panel-content").html(n),e("#jupyter-cogram-info-panel").hide()}),o)},V=(t,o=5e3)=>{const n=e("#info-panel-content").html();let s=e("<div class='mui--text-body2 success-message'>"+t+"</div>");e("#info-panel-content").html(s),M(),o&&setTimeout((()=>{n&&e("#info-panel-content").html(n),e("#jupyter-cogram-info-panel").hide()}),o)},z=()=>{let t=e('<div id="info-panel-content"/>').text("Please submit your API token"),o=e('<form id="token_submit_form"><div class="mui-textfield"><input type="text"name="api_token" placeholder="Your API token" spellcheck="false"class="mui--is-empty mui--is-pristine mui--is-touched"></div><button id="cogram_token_submit" class="mui-btn mui-btn--primary" type="submit">Submit</button></form>');return t.append(o),e("body").on("submit","#token_submit_form",(t=>{t.preventDefault();const o=t.target,[n,s]=(t=>{console.log(c,"Submitting token",t);let o,n=!1;return e.post({url:"/token",data:JSON.stringify({auth_token:t}),headers:{"X-XSRFToken":C("_xsrf")},dataType:"json",async:!1,contentType:"application/json",success:function(e){a=t,A(!0),n=!0},error:function(e,t,n){let s=JSON.parse(e.responseText);o=`Error ${e.status}: ${s.error}`,console.log("Have error msg from `submitToken()`",o)}}),console.log(c,"Token submission completed. Success?",n),[n,o]})(o?.api_token?.value);n?V("Thanks, your token looks good 🎉",2e3):F(s,5e3)})),t};let H=navigator.platform.toUpperCase().indexOf("MAC")>=0;const D=()=>e("#cogram-hint").remove(),L=()=>{D(),(t=>{let o=e('<div class="mui-panel" id="cogram-hint"/>'),n=e(`<div class="mui--text-body2" id="cogram-hint-text">${t}</div>`);o.append(n),e(".cell.code_cell.selected").prepend(o)})((()=>{let e=H?"⌘⏎":"Ctrl+⏎";return g.choices.length>1?`Next (→) &nbsp &nbsp Previous (←) &nbsp &nbsp Accept (${e})`:`Accept (${e})`})())},M=()=>e("#jupyter-cogram-info-panel").show(),Y=e=>{let t=document.createElement("link");t.type="text/css",t.rel="stylesheet",t.href=o.toUrl(e),document.getElementsByTagName("head")[0].appendChild(t)},G=()=>{O()?(console.log(c,"Checking if version is up to date..."),e.get({url:"/checkVersion",dataType:"JSON",async:!1,success:function(e){g.version_is_up_to_date=!0},error:N})):K(z())},Q=t=>{g.version_is_up_to_date=!0;let o=`<div class="mui--text-subhead">Successfully upgraded to version ${t?.new_version} 🎉<span class="mui--text-body2"><br>Please refresh your notebook:</span></div>`+(e("body").on("click","#refresh_button",(()=>{window.location.reload()})),'<button id="refresh_button" class="mui-btn mui-btn--primary">Refresh</button>');V(o,m)},Z=(e,t,o)=>{g.version_is_up_to_date=!1;let n=JSON.parse(e.responseText);g.version_is_up_to_date=!1,console.log(c,"Auto upgrade error:",n),F(`<span class="mui--text-body2">${n?.message}</span>`,1e4)},ee=()=>{(console.log(c,"Upgrading package"),e.post({url:"/upgrade",headers:{"X-XSRFToken":C("_xsrf")},dataType:"json",contentType:"application/json",success:Q,error:Z})).then((e=>console.log(c,"`autoUpgrade()` result:",e))).catch((e=>console.log(c,"Error in `autoUpgrade()`:",e)))};function te(){Y("//cdn.muicss.com/mui-0.10.3/css/mui.min.css"),Y("./jupyter_cogram.css"),function(){let e=f.prototype.handle_codemirror_keyevent;f.prototype.handle_codemirror_keyevent=function(t,o){if(!g.is_open)return;const n=-1!==y.indexOf(o.keyCode),s=R(o);if(console.log(c,"Handling keyevent",o.keyCode,"is special?",n,"command plus event?",s),this instanceof _&&!n&&!I(o)&&!s){this.queryTimer&&clearTimeout(this.queryTimer);let e=this;if(g.considering_choices&&X(o))P(o),j();else if(q(e)&&[35,51,220].includes(o.keyCode))w();else if(U(e)){const e=p;console.log(c,`Scheduling query to run in ${e} ms`),this.queryTimer=setTimeout(w,e)}}return e.apply(this,arguments)}}(),function(){let e=_.prototype.execute;_.prototype.execute=function(t){return T(this),e.apply(this,arguments)}}(),(()=>{let t=e("<div/>").attr("id","jupyter-cogram-info-panel").attr("class","cogram_info_panel_display mui-panel mui--text-subhead mui--z2").attr("style","display: none;"),o=e("<div id='cogram_token_close'>x</div>");t.append(o).append(e('<div id="info-panel-content"/>')),e("body").on("click","#cogram_token_close",(()=>e("#jupyter-cogram-info-panel").hide())),e("body").on("focus","#jupyter-cogram-info-panel",(()=>n.keyboard_manager.disable())),e("body").on("blur","#jupyter-cogram-info-panel",(()=>n.keyboard_manager.enable())),e("#site").prepend(t)})(),n.notebook.kernel?(console.log(c,"Initialising with Kernel ready!"),J(),G()):(console.log(c,"Kernel not ready. Initialising later"),n.notebook.events.one("kernel_ready.Kernel",(()=>{J(),G()})))}return{load_jupyter_extension:te,load_ipython_extension:te}}));