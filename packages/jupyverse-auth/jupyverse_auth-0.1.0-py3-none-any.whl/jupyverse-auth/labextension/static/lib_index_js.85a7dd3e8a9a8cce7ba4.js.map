{"version":3,"file":"lib_index_js.85a7dd3e8a9a8cce7ba4.js","mappings":"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,4BAA4B,8EAA4B;AACxD,iDAAiD,+EAA6B;AAC9E,mDAAmD,8DAAW;AAC9D;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC;AACA,gCAAgC,8EAA4B;AAC5D;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iEAAe,IAAI,EAAC;AACb;AACP;AACA;AACA;AACA,0BAA0B,qDAAM;AAChC,4BAA4B,qDAAM;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,+EAA6B;AACtD,2BAA2B,8DAAW;AACtC,eAAe,8EAA4B,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA,6BAA6B,2FAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2FAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qFAAc;AACtD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClLkD;AACM;AACT;AACW;AACF;AAChB;AACI;AAC5C;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA,eAAe,4DAAO,EAAE,0CAAK;AAC7B,cAAc,8CAAS;AACvB;AACA,gBAAgB,kBAAkB;AAClC,2BAA2B,mDAAM;AACjC;AACA;AACA,mCAAmC,YAAY;AAC/C,yBAAyB,iDAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAI,GAAG,UAAU;AAC1C;AACA,0BAA0B,oEAAa;AACvC;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,iCAAiC,+EAA6B;AAC9D,mCAAmC,8DAAW;AAC9C;AACA;AACA;AACA,gBAAgB,8EAA4B;AAC5C,2CAA2C,YAAY;AACvD,iBAAiB;AACjB;AACA,SAAS;AACT,uBAAuB,4BAA4B;AACnD,4BAA4B,oDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEgC;AACD;AACJ;AACS;AACA;AACA;AACzB;AACc;AACF;AACO;AAClD;AACA;AACA,eAAe,0CAAK,EAAE,kEAAc,EAAE,kEAAgB;AACtD;AACA,cAAc,+CAAU;AACxB;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;AAClB,wBAAwB,6DAAW;AAC1C;AACA;AACA;AACA,8BAA8B,8DAAO;AACrC;AACA,oBAAoB,wDAAgB;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+EAA6B;AACtD,2BAA2B,8DAAW;AACtC,QAAQ,8EAA4B,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,gBAAgB,gDAAmB,UAAU,2BAA2B;AACxE,YAAY,gDAAmB,UAAU,8BAA8B;AACvE,gBAAgB,wDAAW;AAC3B,gBAAgB,gDAAmB,WAAW,6BA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","sources":["webpack://jupyverse-auth/./lib/components.js","webpack://jupyverse-auth/./lib/docprovider.js","webpack://jupyverse-auth/./lib/index.js","webpack://jupyverse-auth/./lib/signInGitHub.js","webpack://jupyverse-auth/./lib/tokens.js","webpack://jupyverse-auth/./lib/user.js","webpack://jupyverse-auth/./lib/userMenu.js","webpack://jupyverse-auth/./lib/userPanel.js","webpack://jupyverse-auth/./style/index.css","webpack://jupyverse-auth/./style/img/github-logo.svg","webpack://jupyverse-auth/./style/img/user.svg","webpack://jupyverse-auth/./style/index.css?b7f0"],"sourcesContent":["import { ReactWidget } from '@jupyterlab/apputils';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport * as userIcon from '../style/img/user.svg';\nexport class UserNameInput extends ReactWidget {\n    constructor(user, commands) {\n        super();\n        this._handleName = (event) => {\n            this._name = event.target.value;\n            this.update();\n        };\n        this._user = user;\n        this._name = user.name;\n        this._commands = commands;\n    }\n    getValue() {\n        return this._name;\n    }\n    render() {\n        const getButtons = () => {\n            return this._user.logInMethods.map(id => {\n                return (React.createElement(\"button\", { id: \"jp-Dialog-button\", className: \"jp-mod-reject jp-mod-styled\", onClick: () => this._commands.execute(id) }, this._commands.label(id)));\n            });\n        };\n        return (React.createElement(\"div\", { className: \"lm-Widget p-Widget jp-Dialog-body jp-Dialog-container\" },\n            React.createElement(\"label\", null, \"Who are you?\"),\n            React.createElement(\"input\", { id: \"jp-dialog-input-id\", type: \"text\", className: \"jp-Input-Dialog jp-mod-styled\", value: this._name, onChange: this._handleName }),\n            React.createElement(\"hr\", null),\n            getButtons()));\n    }\n}\nexport class UserIcon extends ReactWidget {\n    constructor(user) {\n        super();\n        this._profile = user;\n        this._profile.ready.connect(() => this.update());\n        this._profile.changed.connect(() => this.update());\n    }\n    render() {\n        if (this._profile.isReady) {\n            return (React.createElement(\"div\", { className: \"login-container\" },\n                getUserIcon(this._profile),\n                React.createElement(\"span\", { className: \"login-username\" }, this._profile.username)));\n        }\n        const avatar = new LabIcon({\n            name: 'userIcon',\n            svgstr: userIcon.default\n        });\n        return (React.createElement(\"div\", { className: \"login-container\" },\n            React.createElement(\"div\", { className: \"login-icon\" },\n                React.createElement(avatar.react, { className: \"user-img\", tag: \"span\", width: \"28px\", height: \"28px\" }))));\n    }\n}\nexport const getUserIcon = (user) => {\n    if (user.avatar) {\n        return (React.createElement(\"div\", { key: user.id, className: \"login-icon\" },\n            React.createElement(\"img\", { className: \"user-img\", src: user.avatar })));\n    }\n    if (!user.avatar) {\n        return (React.createElement(\"div\", { key: user.id, className: \"login-icon\", style: { backgroundColor: user.color } },\n            React.createElement(\"span\", null, user.initials)));\n    }\n};\n","import { IDocumentProviderFactory, ProviderMock, WebSocketProviderWithLocks } from '@jupyterlab/docprovider';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { getAnonymousUserName, getRandomColor } from '@jupyterlab/docprovider/lib/awareness';\nimport * as env from 'lib0/environment';\nimport { IUser } from './tokens';\n/**\n * The default document provider plugin\n */\nconst docProviderPlugin = {\n    id: 'jupyverse-auth:docprovider',\n    requires: [IUser],\n    provides: IDocumentProviderFactory,\n    activate: (app, user) => {\n        const server = ServerConnection.makeSettings();\n        const url = URLExt.join(server.wsUrl, 'api/yjs');\n        const collaborative = PageConfig.getOption('collaborative') === 'true' ? true : false;\n        const factory = (options) => {\n            const name = env.getParam('--username', getAnonymousUserName());\n            const color = '#' + env.getParam('--usercolor', getRandomColor().slice(1));\n            options.ymodel.awareness.setLocalStateField('user', {\n                isAnonymous: user.isAnonymous,\n                id: user.id,\n                name: user.name || name,\n                username: user.username,\n                initials: user.initials,\n                color: user.color || color,\n                email: user.email,\n                avatar: user.avatar\n            });\n            user.changed.connect(user => {\n                options.ymodel.awareness.setLocalStateField('user', {\n                    isAnonymous: user.isAnonymous,\n                    id: user.id,\n                    name: user.name || name,\n                    username: user.username,\n                    initials: user.initials,\n                    color: user.color || color,\n                    email: user.email,\n                    avatar: user.avatar\n                });\n            });\n            return collaborative\n                ? new WebSocketProviderWithLocks(Object.assign(Object.assign({}, options), { url }))\n                : new ProviderMock();\n        };\n        return factory;\n    }\n};\nexport default docProviderPlugin;\n","import user from './user';\nimport userMenu from './userMenu';\nimport userPanel from './userPanel';\nimport github from './signInGitHub';\nimport docProviderPlugin from './docprovider';\nimport '../style/index.css';\nconst plugins = [\n    user,\n    userMenu,\n    userPanel,\n    github,\n    docProviderPlugin\n];\nexport default plugins;\n","import { IRouter } from '@jupyterlab/application';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { IUser, IUserMenu } from './tokens';\nimport * as github from '../style/img/github-logo.svg';\n/**\n * A namespace for command IDs.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.github = 'jupyverse-auth:github';\n})(CommandIDs || (CommandIDs = {}));\nconst plugin = {\n    id: 'jupyverse-auth:github',\n    autoStart: true,\n    requires: [IRouter, IUser, IUserMenu],\n    activate: (app, router, user, menu) => {\n        const { commands } = app;\n        const icon = new LabIcon({\n            name: 'githubIcon',\n            svgstr: github.default\n        });\n        commands.addCommand(CommandIDs.github, {\n            label: 'Sign In with GitHub',\n            icon: icon,\n            isEnabled: () => user.isAnonymous,\n            //isVisible: () => user.isAnonymous,\n            execute: () => {\n                const settings = ServerConnection.makeSettings();\n                const requestUrl = URLExt.join(settings.baseUrl, '/auth/github/authorize?authentication_backend=cookie');\n                const init = {\n                    method: 'GET',\n                    headers: { accept: 'application/json' }\n                };\n                ServerConnection.makeRequest(requestUrl, init, settings).then(async (resp) => {\n                    const data = await resp.json();\n                    window.location.href = data.authorization_url;\n                });\n            }\n        });\n        menu.insertItem(0, { command: CommandIDs.github });\n        user.registerLogInMethod(CommandIDs.github);\n    }\n};\nexport default plugin;\n","import { Token } from '@lumino/coreutils';\nexport const IUser = new Token('jupyverse-auth:user');\nexport const IUserMenu = new Token('jupyverse-auth:userMenu');\nexport const IUserPanel = new Token('jupyverse-auth:userPanel');\n","import { IRouter } from '@jupyterlab/application';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { Dialog } from '@jupyterlab/apputils';\nimport { getRandomColor, getAnonymousUserName } from '@jupyterlab/docprovider/lib/awareness';\nimport { Signal } from '@lumino/signaling';\nimport { IUser } from './tokens';\nimport { UserNameInput } from './components';\n/**\n * A namespace for command IDs.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.login = 'jupyverse-auth:login';\n})(CommandIDs || (CommandIDs = {}));\nconst user = {\n    id: 'jupyverse-auth:user',\n    autoStart: true,\n    requires: [IRouter],\n    provides: IUser,\n    activate: (app, router) => {\n        const { commands } = app;\n        const user = new User();\n        commands.addCommand(CommandIDs.login, {\n            execute: () => {\n                if (!user.isReady) {\n                    const body = new UserNameInput(user, commands);\n                    const dialog = new Dialog({\n                        title: 'Anonymous username',\n                        body,\n                        hasClose: false,\n                        buttons: [\n                            Dialog.okButton({\n                                label: 'Send'\n                            })\n                        ]\n                    });\n                    dialog.node.onclick = (event) => {\n                        event.preventDefault();\n                        event.stopImmediatePropagation();\n                    };\n                    dialog.launch().then(data => {\n                        if (data.button.accept) {\n                            const settings = ServerConnection.makeSettings();\n                            const requestUrl = URLExt.join(settings.baseUrl, 'register');\n                            const init = {\n                                method: 'POST',\n                                headers: { 'Content-Type': 'application/json' },\n                                body: JSON.stringify({\n                                    email: data.value.replace(' ', '_') + '@foo.com',\n                                    username: data.value,\n                                    password: 'bar',\n                                    name: data.value,\n                                    color: user.color\n                                })\n                            };\n                            ServerConnection.makeRequest(requestUrl, init, settings).then(async (resp) => {\n                                const settings = ServerConnection.makeSettings();\n                                const requestUrl = URLExt.join(settings.baseUrl, 'login');\n                                const init = {\n                                    method: 'POST',\n                                    headers: {\n                                        'Content-Type': 'application/x-www-form-urlencoded'\n                                    },\n                                    body: new URLSearchParams({\n                                        username: data.value.replace(' ', '_') + '@foo.com',\n                                        password: 'bar'\n                                    })\n                                };\n                                ServerConnection.makeRequest(requestUrl, init, settings).then(async (resp) => {\n                                    user.update();\n                                });\n                            });\n                        }\n                    });\n                }\n            }\n        });\n        router.register({\n            pattern: /^\\/lab/,\n            command: CommandIDs.login\n        });\n        return user;\n    }\n};\nexport default user;\nexport class User {\n    constructor() {\n        this._isAnonymous = true;\n        this._isReady = false;\n        this._ready = new Signal(this);\n        this._changed = new Signal(this);\n        this._logInMethods = [];\n        this._requestUser().then(() => {\n            this._ready.emit(this._isReady);\n        });\n    }\n    get id() {\n        return this._id;\n    }\n    get name() {\n        return this._name;\n    }\n    get username() {\n        return this._username;\n    }\n    get initials() {\n        return this._initials;\n    }\n    get color() {\n        return this._color;\n    }\n    get email() {\n        return this._email;\n    }\n    get avatar() {\n        return this._avatar;\n    }\n    get isAnonymous() {\n        return this._isAnonymous;\n    }\n    get isReady() {\n        return this._isReady;\n    }\n    get ready() {\n        return this._ready;\n    }\n    get changed() {\n        return this._changed;\n    }\n    get logInMethods() {\n        return this._logInMethods;\n    }\n    registerLogInMethod(command) {\n        this._logInMethods.push(command);\n    }\n    update() {\n        this._requestUser().then(() => {\n            this._changed.emit();\n        });\n    }\n    async _requestUser() {\n        const settings = ServerConnection.makeSettings();\n        const requestUrl = URLExt.join(settings.baseUrl, 'auth', 'users', 'me');\n        return ServerConnection.makeRequest(requestUrl, {}, settings)\n            .then(async (resp) => {\n            if (!resp.ok) {\n                this._isReady = false;\n                this._isAnonymous = null;\n                this._id = null;\n                this._name = getAnonymousUserName();\n                this._username = null;\n                this._initials = null;\n                this._color = null;\n                this._email = null;\n                this._avatar = null;\n                return Promise.resolve();\n            }\n            const data = await resp.json();\n            this._isReady = data.initialized;\n            this._isAnonymous = data.anonymous;\n            this._id = data.id;\n            this._name = data.name || getAnonymousUserName();\n            this._username = data.username || this._name;\n            const name = this._name.split(' ');\n            if (name.length > 0) {\n                this._initials = name[0].substring(0, 1).toLocaleUpperCase();\n            }\n            if (name.length > 1) {\n                this._initials += name[1].substring(0, 1).toLocaleUpperCase();\n            }\n            this._color = data.color || getRandomColor();\n            this._email = data.email;\n            this._avatar = data.avatar;\n            return Promise.resolve();\n        })\n            .catch(err => console.error(err));\n    }\n}\n","import { IRouter } from '@jupyterlab/application';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { caretDownIcon } from '@jupyterlab/ui-components';\nimport { Widget, MenuBar, Menu } from '@lumino/widgets';\nimport { UserIcon } from './components';\nimport { IUser, IUserMenu } from './tokens';\n/**\n * A namespace for command IDs.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.loggedInAs = 'jupyverse-auth:loggedInAs';\n    CommandIDs.logout = 'jupyverse-auth:logout';\n})(CommandIDs || (CommandIDs = {}));\nconst menu = {\n    id: 'jupyverse-auth:userMenu',\n    autoStart: true,\n    requires: [IRouter, IUser],\n    provides: IUserMenu,\n    activate: (app, router, user) => {\n        const { shell, commands } = app;\n        const spacer = new Widget();\n        spacer.id = 'jp-topbar-spacer';\n        spacer.addClass('topbar-spacer');\n        shell.add(spacer, 'top', { rank: 1000 });\n        const icon = new UserIcon(user);\n        icon.id = 'jp-UserIcon';\n        // TODO: remove with next lumino release\n        icon.node.onclick = (event) => {\n            menu.open(window.innerWidth, 30);\n        };\n        const menu = new Menu({ commands });\n        menu.id = 'jp-UserMenu-dropdown';\n        menu.title.icon = caretDownIcon;\n        menu.title.className = 'jp-UserMenu-dropdown';\n        menu.addItem({ type: 'separator' });\n        commands.addCommand(CommandIDs.logout, {\n            label: 'Sign Out',\n            isEnabled: () => !user.isAnonymous,\n            //isVisible: () => !user.isAnonymous,\n            execute: () => {\n                const settings = ServerConnection.makeSettings();\n                const requestUrl = URLExt.join(settings.baseUrl, 'logout');\n                const init = {\n                    method: 'POST'\n                };\n                ServerConnection.makeRequest(requestUrl, init, settings).then(async (resp) => {\n                    router.navigate('/', { hard: true });\n                });\n            }\n        });\n        menu.addItem({ command: CommandIDs.logout });\n        const menuBar = new MenuBar();\n        menuBar.id = 'jp-UserMenu';\n        menuBar.node.insertBefore(icon.node, menuBar.node.firstChild);\n        menuBar.addMenu(menu);\n        // TODO: remove with next lumino release\n        menuBar.node.onmousedown = (event) => {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            menu.open(window.innerWidth, 30);\n        };\n        shell.add(menuBar, 'top', { rank: 1002 });\n        return menu;\n    }\n};\nexport default menu;\n","import { LabIcon } from '@jupyterlab/ui-components';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { IEditorTracker } from '@jupyterlab/fileeditor';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport * as React from 'react';\nimport { IUser, IUserPanel } from './tokens';\nimport { getUserIcon } from './components';\nimport * as userIcon from '../style/img/user.svg';\nconst userPanel = {\n    id: 'jupyverse-auth:userPanel',\n    requires: [IUser, IEditorTracker, INotebookTracker],\n    autoStart: true,\n    provides: IUserPanel,\n    activate: (app, user, editor, notebook) => {\n        const userPanel = new UserPanel(user);\n        app.shell.add(userPanel, 'left', { rank: 300 });\n        const collaboratorsChanged = (tracker) => {\n            if (tracker.currentWidget === null) {\n                userPanel.collaborators = [];\n                return;\n            }\n            const model = tracker.currentWidget.context.model.sharedModel;\n            const stateChanged = () => {\n                //@ts-ignore\n                const state = model.awareness.getStates();\n                const collaborators = [];\n                state.forEach((value, key) => {\n                    const collaborator = {\n                        isAnonymous: value.user.isAnonymous,\n                        id: value.user.id,\n                        name: value.user.name,\n                        username: value.user.username,\n                        initials: value.user.initials,\n                        color: value.user.color,\n                        email: value.user.email,\n                        avatar: value.user.avatar\n                    };\n                    collaborators.push(collaborator);\n                });\n                userPanel.collaborators = collaborators;\n            };\n            //@ts-ignore\n            model.awareness.on('change', stateChanged);\n            stateChanged();\n        };\n        notebook.currentChanged.connect(collaboratorsChanged);\n        editor.currentChanged.connect(collaboratorsChanged);\n        return userPanel;\n    }\n};\nexport default userPanel;\nexport class UserPanel extends ReactWidget {\n    constructor(user) {\n        super();\n        this.id = 'jp-user-panel';\n        this.title.icon = new LabIcon({\n            name: 'userIcon',\n            svgstr: userIcon.default\n        });\n        this.addClass('jp-AuthWidget');\n        this._profile = user;\n        this._users = [];\n        this._collaborators = [];\n    }\n    get collaborators() {\n        return this._collaborators;\n    }\n    set collaborators(users) {\n        this._collaborators = users;\n        this.update();\n    }\n    onBeforeShow(msg) {\n        super.onBeforeShow(msg);\n        const settings = ServerConnection.makeSettings();\n        const requestUrl = URLExt.join(settings.baseUrl, 'auth', 'users');\n        ServerConnection.makeRequest(requestUrl, {}, settings).then(async (resp) => {\n            if (!resp.ok) {\n                return;\n            }\n            const data = await resp.json();\n            this._users = [];\n            data.forEach((user) => {\n                const name = user.name.split(' ');\n                let initials = '';\n                if (name.length > 0) {\n                    initials += name[0].substring(0, 1).toLocaleUpperCase();\n                }\n                if (name.length > 1) {\n                    initials += name[1].substring(0, 1).toLocaleUpperCase();\n                }\n                const collaborator = {\n                    isAnonymous: true,\n                    id: user.id,\n                    name: user.name,\n                    username: user.username || user.name,\n                    initials,\n                    color: user.color || '#E0E0E0',\n                    email: null,\n                    avatar: user.avatar\n                };\n                this._users.push(collaborator);\n            });\n            this.update();\n        });\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"jp-UserPanel\" },\n            React.createElement(\"div\", { className: \"panel-container\" },\n                getUserIcon(this._profile),\n                React.createElement(\"span\", { className: \"panel-username\" }, this._profile.name)),\n            React.createElement(\"h5\", null, \"Connected users\"),\n            React.createElement(\"hr\", null),\n            React.createElement(\"div\", { className: \"panel-container\" }, this._users.map(user => {\n                if (this._profile.id !== user.id) {\n                    return getUserIcon(user);\n                }\n            })),\n            React.createElement(\"h5\", null, \"Collaborators\"),\n            React.createElement(\"hr\", null),\n            React.createElement(\"div\", { className: \"panel-container\" }, this._collaborators.map(user => {\n                if (this._profile.id !== user.id &&\n                    this._profile.username !== user.username) {\n                    return getUserIcon(user);\n                }\n            }))));\n    }\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jp-AuthWidget {\\n  padding: 10px;\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n  font-size: 24px;\\n  display: flex;\\n  text-align: center;\\n  justify-content: center;\\n/*  align-items: center; */\\n}\\n\\n#jp-topbar-spacer {\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n}\\n\\n#jp-UserIcon {\\n  width: auto;\\n  height: 33px;\\n}\\n\\n#jp-UserMenu {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.login-container {\\n  height: 27px;\\n  display: flex;\\n  flex-direction: row;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.login-container:hover {\\n  cursor: pointer;\\n}\\n\\n.login-icon {\\n  margin: auto;\\n  margin-top: 1px;\\n  width: 25px;\\n  height: 25px;\\n  border-radius: 90px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.login-icon span {\\n  margin: auto;\\n  padding-top: 3px;\\n  text-align: center;\\n  vertical-align: middle;\\n  fill: var(--jp-ui-font-color1);\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.user-img {\\n  width: 25px;\\n  height: 25px;\\n  border-radius: 90px;\\n  fill: var(--jp-ui-font-color1);\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.login-username {\\n  margin: auto;\\n  margin-left: 8px;\\n  padding-top: 3px;\\n  text-align: center;\\n  vertical-align: middle;\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.jp-UserMenu-dropdown {\\n  height: 30px;\\n  padding: 4px;\\n  padding-bottom: 0px;\\n}\\n\\n.jp-github-icon {\\n  margin-top: 4px;\\n}\\n\\n.jp-Dialog-container {\\n  min-height: 140;\\n  overflow: hidden;\\n}\\n\\n.jp-UserPanel span {\\n  font-size: 12px;\\n}\\n\\n.jp-UserPanel h5 {\\n  margin-bottom: 0px;\\n}\\n\\n.panel-container {\\n  height: 27px;\\n  display: flex;\\n  flex-direction: row;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.panel-username {\\n  margin: auto;\\n  margin-left: 8px;\\n  padding-top: 3px;\\n  text-align: center;\\n  vertical-align: middle;\\n  color: var(--jp-ui-font-color1);\\n  font-size: 12px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,+BAA+B;EAC/B,mCAAmC;EACnC,eAAe;EACf,aAAa;EACb,kBAAkB;EAClB,uBAAuB;AACzB,0BAA0B;AAC1B;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,kBAAkB;EAClB,sBAAsB;EACtB,8BAA8B;EAC9B,+BAA+B;AACjC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,8BAA8B;EAC9B,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;EAClB,sBAAsB;EACtB,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;EAClB,sBAAsB;EACtB,+BAA+B;EAC/B,eAAe;AACjB\",\"sourcesContent\":[\".jp-AuthWidget {\\n  padding: 10px;\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n  font-size: 24px;\\n  display: flex;\\n  text-align: center;\\n  justify-content: center;\\n/*  align-items: center; */\\n}\\n\\n#jp-topbar-spacer {\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n}\\n\\n#jp-UserIcon {\\n  width: auto;\\n  height: 33px;\\n}\\n\\n#jp-UserMenu {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.login-container {\\n  height: 27px;\\n  display: flex;\\n  flex-direction: row;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.login-container:hover {\\n  cursor: pointer;\\n}\\n\\n.login-icon {\\n  margin: auto;\\n  margin-top: 1px;\\n  width: 25px;\\n  height: 25px;\\n  border-radius: 90px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.login-icon span {\\n  margin: auto;\\n  padding-top: 3px;\\n  text-align: center;\\n  vertical-align: middle;\\n  fill: var(--jp-ui-font-color1);\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.user-img {\\n  width: 25px;\\n  height: 25px;\\n  border-radius: 90px;\\n  fill: var(--jp-ui-font-color1);\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.login-username {\\n  margin: auto;\\n  margin-left: 8px;\\n  padding-top: 3px;\\n  text-align: center;\\n  vertical-align: middle;\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.jp-UserMenu-dropdown {\\n  height: 30px;\\n  padding: 4px;\\n  padding-bottom: 0px;\\n}\\n\\n.jp-github-icon {\\n  margin-top: 4px;\\n}\\n\\n.jp-Dialog-container {\\n  min-height: 140;\\n  overflow: hidden;\\n}\\n\\n.jp-UserPanel span {\\n  font-size: 12px;\\n}\\n\\n.jp-UserPanel h5 {\\n  margin-bottom: 0px;\\n}\\n\\n.panel-container {\\n  height: 27px;\\n  display: flex;\\n  flex-direction: row;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.panel-username {\\n  margin: auto;\\n  margin-left: 8px;\\n  padding-top: 3px;\\n  text-align: center;\\n  vertical-align: middle;\\n  color: var(--jp-ui-font-color1);\\n  font-size: 12px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export default \"<svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M22.3903 6.12641C21.3172 4.24172 19.8617 2.74961 18.0232 1.64975C16.1845 0.549822 14.1772 0 11.9999 0C9.82282 0 7.81486 0.54999 5.97655 1.64975C4.13797 2.74956 2.68246 4.24172 1.60939 6.12641C0.536482 8.01104 0 10.0691 0 12.3005C0 14.9808 0.762885 17.3911 2.28904 19.5319C3.81503 21.6728 5.78638 23.1543 8.20293 23.9764C8.48422 24.0299 8.69245 23.9923 8.82785 23.8644C8.96329 23.7364 9.03093 23.5761 9.03093 23.3841C9.03093 23.3521 9.02825 23.0639 9.02305 22.5193C9.01769 21.9746 9.01517 21.4994 9.01517 21.094L8.65579 21.1577C8.42665 21.2008 8.13758 21.219 7.78859 21.2138C7.43977 21.2088 7.07764 21.1714 6.70271 21.1017C6.32762 21.0326 5.97874 20.8725 5.6558 20.6215C5.33302 20.3706 5.10388 20.0422 4.96844 19.6367L4.81219 19.2681C4.70805 19.0227 4.54409 18.7502 4.32009 18.4514C4.0961 18.1523 3.86959 17.9496 3.64045 17.8428L3.53105 17.7625C3.45816 17.7092 3.39051 17.6448 3.32796 17.5702C3.26546 17.4955 3.21867 17.4208 3.18742 17.346C3.15612 17.2711 3.18206 17.2096 3.26552 17.1614C3.34898 17.1133 3.4998 17.0899 3.71865 17.0899L4.03103 17.1377C4.23937 17.1805 4.49708 17.3084 4.80448 17.522C5.11171 17.7356 5.36427 18.0131 5.56222 18.3547C5.80192 18.7926 6.09071 19.1262 6.42941 19.3559C6.76784 19.5855 7.10906 19.7001 7.45274 19.7001C7.79642 19.7001 8.09325 19.6734 8.34335 19.6202C8.59318 19.5668 8.82757 19.4866 9.04642 19.3799C9.14017 18.6642 9.39541 18.1143 9.81193 17.73C9.21826 17.6661 8.68452 17.5697 8.21042 17.4417C7.7366 17.3134 7.24697 17.1053 6.74184 16.8167C6.23645 16.5285 5.81719 16.1707 5.48396 15.7438C5.15068 15.3166 4.87715 14.7559 4.66378 14.062C4.45029 13.3678 4.34352 12.5671 4.34352 11.6595C4.34352 10.3673 4.75506 9.26765 5.57798 8.35997C5.19249 7.38846 5.22888 6.29936 5.68727 5.0928C5.98936 4.99659 6.43735 5.06879 7.03102 5.30894C7.6248 5.54921 8.05954 5.75504 8.33569 5.92569C8.61184 6.09629 8.8331 6.24085 8.99979 6.3581C9.96872 6.08058 10.9686 5.94179 11.9998 5.94179C13.0309 5.94179 14.0311 6.08058 15 6.3581L15.5938 5.97388C15.9998 5.71751 16.4792 5.48257 17.031 5.269C17.5831 5.05555 18.0052 4.99675 18.297 5.09296C18.7656 6.29959 18.8074 7.38863 18.4217 8.36014C19.2446 9.26782 19.6563 10.3677 19.6563 11.6597C19.6563 12.5673 19.5492 13.3705 19.336 14.07C19.1226 14.7696 18.8467 15.3298 18.5083 15.7518C18.1695 16.1737 17.7475 16.5288 17.2424 16.8169C16.7372 17.1052 16.2474 17.3134 15.7735 17.4416C15.2995 17.5698 14.7658 17.6662 14.1721 17.7303C14.7136 18.2106 14.9843 18.9688 14.9843 20.0045V23.3837C14.9843 23.5756 15.0495 23.7359 15.1798 23.864C15.31 23.9918 15.5156 24.0295 15.7969 23.9759C18.2138 23.1539 20.1851 21.6724 21.7111 19.5314C23.2368 17.3907 24 14.9804 24 12.3C23.9995 10.0689 23.4627 8.01104 22.3903 6.12641Z\\\" fill=\\\"black\\\"/>\\n</svg>\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" viewBox=\\\"-42 0 512 512\\\">\\n\\t<g class=\\\"jp-icon3 jp-icon-selectable\\\" fill=\\\"#616161\\\">\\n    <path d=\\\"m210.351562 246.632812c33.882813 0 63.222657-12.152343 87.195313-36.128906 23.972656-23.972656 36.125-53.304687 36.125-87.191406 0-33.875-12.152344-63.210938-36.128906-87.191406-23.976563-23.96875-53.3125-36.121094-87.191407-36.121094-33.886718 0-63.21875 12.152344-87.191406 36.125s-36.128906 53.308594-36.128906 87.1875c0 33.886719 12.15625 63.222656 36.132812 87.195312 23.976563 23.96875 53.3125 36.125 87.1875 36.125zm0 0\\\"/>\\n\\t\\t<path d=\\\"m426.128906 393.703125c-.691406-9.976563-2.089844-20.859375-4.148437-32.351563-2.078125-11.578124-4.753907-22.523437-7.957031-32.527343-3.308594-10.339844-7.808594-20.550781-13.371094-30.335938-5.773438-10.15625-12.554688-19-20.164063-26.277343-7.957031-7.613282-17.699219-13.734376-28.964843-18.199219-11.226563-4.441407-23.667969-6.691407-36.976563-6.691407-5.226563 0-10.28125 2.144532-20.042969 8.5-6.007812 3.917969-13.035156 8.449219-20.878906 13.460938-6.707031 4.273438-15.792969 8.277344-27.015625 11.902344-10.949219 3.542968-22.066406 5.339844-33.039063 5.339844-10.972656 0-22.085937-1.796876-33.046874-5.339844-11.210938-3.621094-20.296876-7.625-26.996094-11.898438-7.769532-4.964844-14.800782-9.496094-20.898438-13.46875-9.75-6.355468-14.808594-8.5-20.035156-8.5-13.3125 0-25.75 2.253906-36.972656 6.699219-11.257813 4.457031-21.003906 10.578125-28.96875 18.199219-7.605469 7.28125-14.390625 16.121094-20.15625 26.273437-5.558594 9.785157-10.058594 19.992188-13.371094 30.339844-3.199219 10.003906-5.875 20.945313-7.953125 32.523437-2.058594 11.476563-3.457031 22.363282-4.148437 32.363282-.679688 9.796875-1.023438 19.964844-1.023438 30.234375 0 26.726562 8.496094 48.363281 25.25 64.320312 16.546875 15.746094 38.441406 23.734375 65.066406 23.734375h246.53125c26.625 0 48.511719-7.984375 65.0625-23.734375 16.757813-15.945312 25.253906-37.585937 25.253906-64.324219-.003906-10.316406-.351562-20.492187-1.035156-30.242187zm0 0\\\"/>\\n  </g>\\n</svg>\";","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}