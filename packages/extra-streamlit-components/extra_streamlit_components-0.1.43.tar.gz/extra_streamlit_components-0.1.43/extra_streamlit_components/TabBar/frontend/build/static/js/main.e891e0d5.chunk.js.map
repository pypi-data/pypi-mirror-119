{"version":3,"sources":["TabBar.tsx","index.tsx"],"names":["TabBar","props","state","numClicks","selectedId","list","MenuItem","item","console","log","className","id","title","style","fontWeight","fontStyle","description","Arrow","text","ArrowLeft","ArrowRight","render","alignCenter","data","Menu","wheel","scrollToSelected","selected","onSelect","borderColor","setState","Streamlit","setComponentValue","args","map","key","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"wOAmBMA,E,kDAGJ,WAAYC,GAA6B,IAAD,8BACtC,cAAMA,IAHDC,MAAQ,CAAEC,UAAW,EAAGC,WAAY,EAAGC,KAAM,IAEZ,EAMxCC,SAAW,YAAmE,IAAhEC,EAA+D,EAA/DA,KAAMH,EAAyD,EAAzDA,WAGlB,OAFAI,QAAQC,IAAIL,GAGV,yBAAKM,UAAS,oBAAeN,GAAcG,EAAKI,GAAK,SAAW,KAC9D,6BAAMJ,EAAKK,OACX,yBAAKC,MAAO,CAAEC,WAAY,SAAUC,UAAW,WAC5CR,EAAKS,eAb0B,EAwBxCC,MAAQ,YAA+D,IAA5DC,EAA2D,EAA3DA,KAAMR,EAAqD,EAArDA,UACf,OAAO,yBAAKA,UAAWA,GAAYQ,IAzBG,EA4BxCC,UAAY,EAAKF,MAAM,CAAEC,KAAM,IAAKR,UAAW,eA5BP,EA6BxCU,WAAa,EAAKH,MAAM,CAAEC,KAAM,IAAKR,UAAW,eA7BR,EA+BjCW,OAAS,WACd,OACE,6BACE,kBAAC,IAAD,CACEC,aAAa,EACbC,KAAM,EAAKC,KAAK,EAAKtB,MAAMG,KAAM,EAAKH,MAAME,YAC5CqB,OAAO,EACPC,kBAAkB,EAClBC,SAAQ,UAAK,EAAKzB,MAAME,YACxBwB,SAAU,EAAKA,WAEjB,wBACEf,MAAO,CACLgB,YAAa,sCA5CiB,EAmDxCD,SAAW,SAACjB,GACV,EAAKmB,UACH,SAAC5B,EAAOD,GACN,MAAO,CAAEG,WAAYO,MAEvB,kBAAMoB,IAAUC,kBAAkBrB,OAtDpC,EAAKT,MAAMG,KAAO,EAAKJ,MAAMgC,KAAX,KAClB,EAAK/B,MAAME,WAAa,EAAKH,MAAMgC,KAAX,WAHc,E,wCAmBxC,SAAK5B,EAAuBD,GAAqB,IAAD,OAC9C,OAAOC,EAAK6B,KAAI,SAAC3B,GAAD,OACd,kBAAC,EAAKD,SAAN,CAAeC,KAAMA,EAAMH,WAAYA,EAAY+B,IAAK5B,EAAKI,Y,GAxB9CyB,KAgENC,cAAwBrC,GC/EvCsC,IAASjB,OACP,kBAAC,IAAMkB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e891e0d5.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ComponentProps, ReactNode } from \"react\"\nimport ScrollMenu from \"react-horizontal-scrolling-menu\"\n\ninterface State {\n  numClicks: number\n  selectedId: number\n}\n\ninterface MenuItem {\n  id: number\n  title: string\n  description: string\n}\n\nclass TabBar extends StreamlitComponentBase<State> {\n  public state = { numClicks: 0, selectedId: 1, list: [] }\n\n  constructor(props: ComponentProps<any>) {\n    super(props)\n    this.state.list = this.props.args[\"data\"]\n    this.state.selectedId = this.props.args[\"selectedId\"]\n  }\n\n  MenuItem = ({ item, selectedId }: { item: MenuItem; selectedId: number }) => {\n    console.log(selectedId)\n\n    return (\n      <div className={`menu-item ${selectedId == item.id ? \"active\" : \"\"}`}>\n        <div>{item.title}</div>\n        <div style={{ fontWeight: \"normal\", fontStyle: \"italic\" }}>\n          {item.description}\n        </div>\n      </div>\n    )\n  }\n\n  Menu(list: Array<MenuItem>, selectedId: number) {\n    return list.map((item) => (\n      <this.MenuItem item={item} selectedId={selectedId} key={item.id} />\n    ))\n  }\n  Arrow = ({ text, className }: { text: string; className: string }) => {\n    return <div className={className}>{text}</div>\n  }\n\n  ArrowLeft = this.Arrow({ text: \"<\", className: \"arrow-prev\" })\n  ArrowRight = this.Arrow({ text: \">\", className: \"arrow-next\" })\n\n  public render = (): ReactNode => {\n    return (\n      <div>\n        <ScrollMenu\n          alignCenter={false}\n          data={this.Menu(this.state.list, this.state.selectedId)}\n          wheel={true}\n          scrollToSelected={true}\n          selected={`${this.state.selectedId}`}\n          onSelect={this.onSelect}\n        />\n        <hr\n          style={{\n            borderColor: \"var(--streamlit-primary-color)\",\n          }}\n        />\n      </div>\n    )\n  }\n\n  onSelect = (id: any) => {\n    this.setState(\n      (state, props) => {\n        return { selectedId: id }\n      },\n      () => Streamlit.setComponentValue(id)\n    )\n  }\n}\n\nexport default withStreamlitConnection(TabBar)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TabBar from \"./TabBar\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <TabBar />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}