{"version":3,"sources":["webpack://jupyterlab-gpustats/./lib/handler.js","webpack://jupyterlab-gpustats/./lib/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACzBqD;AACE;AACN;AACV;AACK;AACH;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAO,EAAE,iEAAe,EAAE,2DAAS,EAAE,+DAAa;AACjE;AACA;AACA,iCAAiC,mDAAM;AACvC,iCAAiC,mDAAM;AACvC,kCAAkC,mDAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+GAA+G,OAAO;AACtH,aAAa;AACb;AACA;AACA;AACA,iEAAe,SAAS,EAAC","file":"lib_index_js.3802053a6cd2ff2db2af.js","sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'jupyterlab-gpustats', endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    const data = await response.json();\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message);\n    }\n    return data;\n}\n","import { IThemeManager } from '@jupyterlab/apputils';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { requestAPI } from './handler';\nimport { ITopBar } from 'jupyterlab-topbar';\nimport { Widget } from '@lumino/widgets';\n/**\n * Initialization data for jupyterlab-gpustats server extension.\n */\nconst extension = {\n    id: 'jupyterlab-gpustats',\n    autoStart: true,\n    requires: [ITopBar, ICommandPalette, IMainMenu, IThemeManager],\n    activate: async (app, topBar) => {\n        console.log('JupyterLab extension jupyterlab-gpustats is activated!');\n        const gpuUtlWidget = new Widget();\n        const gpuMemWidget = new Widget();\n        const storageWidget = new Widget();\n        update();\n        topBar.addItem('storage', storageWidget);\n        topBar.addItem('gpu_mem', gpuMemWidget);\n        topBar.addItem('gpu_utl', gpuUtlWidget);\n        setInterval(update, 5000);\n        function update() {\n            requestAPI('metrics')\n                .then(data => {\n                gpuUtlWidget.node.textContent =\n                    'GPU: ' + data['gpu']['utilization.gpu'] + '%';\n                gpuMemWidget.node.textContent =\n                    'GPU Mem: ' +\n                        data['gpu']['memory.used'] +\n                        ' of ' +\n                        data['gpu']['memory.total'] +\n                        'MB';\n                storageWidget.node.textContent =\n                    'Storage Used ' +\n                        data['storage']['used'] +\n                        ' / ' +\n                        data['storage']['free'] + ' Free';\n            })\n                .catch(reason => {\n                console.error(`The jupyterlab_gpustats_service_info server extension appears to be missing.\\n${reason}`);\n            });\n        }\n    }\n};\nexport default extension;\n"],"sourceRoot":""}