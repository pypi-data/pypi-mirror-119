# Clear existing tasks & schedulers
clear_existing: True

# Loggers, handlers, formatters
logging:
  version: 1
  disable_existing_loggers: True
  formatters:
    standard:
      format: '%(asctime)s %(levelname)s %(name)s %(message)s'
    # Custom
    csv_formatter:
      (): redengine.log.CsvFormatter
      fields: [
        asctime,
        levelname,
        name,
        message
      ]
    csv_task_formatter:
      (): redengine.log.CsvFormatter
      fields: [
        task_name,
        asctime,
        action,
        start, # Represents the start time of the task (for failure/success/etc.)
        end,
        runtime,
        exc_text,
      ]

  handlers:
    default:
       level: 'INFO'
       formatter: 'standard'
       class: 'logging.StreamHandler'
       stream: 'ext://sys.stdout' # Default is stderr
    stdout:
       level: 'INFO'
       formatter: 'standard'
       class: 'logging.StreamHandler'
       stream: 'ext://sys.stdout'  # Default is stderr
    stderr:
       level: 'ERROR'
       formatter: 'standard'
       class: 'logging.StreamHandler'
       stream: 'ext://sys.stdout'  # Default is stderr

    # Custom
    csv_scheduler:
       (): "redengine.log.CsvHandler"
       formatter: "csv_formatter"
       filename: "log/scheduler.csv"
       make_dir: True
       delay: True
    csv_task:
       (): "redengine.log.CsvHandler"
       formatter: "csv_task_formatter"
       filename: "log/tasks.csv"
       make_dir: True
       delay: True
    csv_task_maintain:
       (): "redengine.log.CsvHandler"
       formatter: "csv_task_formatter"
       filename: "log/maintainers.csv"
       make_dir: True
       delay: True

  loggers:
    '': # root logger
       handlers: ['default']
       level: 'WARNING'
       propagate: False
    redengine.task: 
       handlers: ['stderr', 'csv_task']
       level: 'INFO'
       propagate: False
    redengine.task._process:
      # Preventing the logger of a 
      # process task to use parent
      # logger
      propagate: False
    redengine.task.maintainer: 
       handlers: ['csv_task_maintain']
       level: 'INFO'
       propagate: False
    redengine.scheduler:
       handlers: ['csv_scheduler']
       level: 'INFO'
       propagate: False
    __main__:  # if __name__ == '__main__'
       handlers: ['default']
       level: 'DEBUG'
       propagate: False