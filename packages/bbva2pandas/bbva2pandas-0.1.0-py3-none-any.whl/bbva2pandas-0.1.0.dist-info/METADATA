Metadata-Version: 2.1
Name: bbva2pandas
Version: 0.1.0
Summary: Parse BBVA monthly reports directly to a Dataframe
Home-page: https://github.com/blalop/bbva2pandas
Author: Alejandro Blanco López
Author-email: alexbl1996@gmail.com
License: GPLv3+
Keywords: bbva pdf bank regex
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Database
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Office/Business :: Financial :: Accounting
Classifier: Typing :: Typed
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas (==1.2.1)
Requires-Dist: numpy (==1.20.2)
Requires-Dist: pdftotext (==2.1.5)

# BBVA reports extractor
[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)
[![Made with Python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)

Library + script to extract your bank account movements from the pdf reports that BBVA provides each month. Export it to csv or sqlite.

A [Grafana dashboard](grafana/bank_movements.json) is provided to visualize this data.

## Dependencies

The following libpoppler dependencies are needed for pdftotext:

```bash
sudo apt install build-essential libpoppler-cpp-dev pkg-config python3-dev
```

## Downloading the reports

In [bbva.es](https://bbva.es), login and go to Posición global > Cuentas y Tarjetas > Ficha. Then click Operaciones > Extracto mensual cuentas. Ready to go!

## Using the libray

You can either provide the file to be read or the raw string:

```python
from bbva2pandas.file_handler import read_report
with open(filename, 'rb') as f:
    dataframe = read_report(f)
```

```python
from bbva2pandas.report_parser import parse_report_content
dataframe = report_parser.parse_report_content('filecontent')
```

## Running the script

The provided script loads all the PDFs in the provided directory and generates a CSV/sqlite file
```
usage: bbva2pandas [-h] [--output_filename OUTPUT_FILENAME] directory {csv,sqlite}
bbva2pandas: error: the following arguments are required: directory, output_format
```

## Testing

Run

```bash
python3 -m unittest discover tests
```

