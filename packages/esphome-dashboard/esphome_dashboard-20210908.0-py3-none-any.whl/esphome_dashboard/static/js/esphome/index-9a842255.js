$(document).ready((function(){M.AutoInit(document.body),o(),p()}));const e=window.location,t=new URL("./",`${e.protocol}//${e.host}${e.pathname}`);t.protocol="ws:","https:"===e.protocol&&(t.protocol="wss:");const n=t.href,o=()=>{const e=document.querySelectorAll("#nodes .card").length,t=document.querySelector("#nodes #grid");e<=3?t.classList.add("grid-1-col"):e<=6?t.classList.add("grid-2-col"):t.classList.add("grid-3-col")};let a=null,s=!1,c=null,r=!1,i=!1;const d=document.querySelector("#js-editor-modal #js-editor-area"),l=ace.edit(d);l.setOptions({highlightActiveLine:!0,showPrintMargin:!0,useSoftTabs:!0,tabSize:2,useWorker:!1,theme:"ace/theme/dreamweaver",mode:"ace/mode/yaml"}),l.commands.addCommand({name:"saveCommand",bindKey:{win:"Ctrl-S",mac:"Command-S"},exec:function(){g(a)},readOnly:!1});const u=e=>{a=e;document.querySelector("#js-editor-modal #js-node-filename").innerHTML=a;const t=document.querySelector("#js-editor-modal [data-action='save']"),n=document.querySelector("#js-editor-modal [data-action='upload']"),o=document.querySelector("#js-editor-modal [data-action='close']");t.setAttribute("data-filename",a),n.setAttribute("data-filename",a),n.onclick=()=>g(a),"secrets.yaml"===a||"secrets.yml"===a?(n.classList.add("disabled"),s=!0):(n.classList.remove("disabled"),s=!1),o.setAttribute("data-filename",a);const c=document.querySelector("#js-editor-modal #js-loading-indicator"),r=document.querySelector("#js-editor-modal #js-editor-area");c.style.display="block",r.style.display="none",l.setOption("readOnly",!0),fetch(`./edit?configuration=${a}`,{credentials:"same-origin"}).then((e=>e.text())).then((e=>{l.setValue(e,-1),l.setOption("readOnly",!1),c.style.display="none",r.style.display="block"})),l.focus();const i=document.getElementById("js-editor-modal");M.Modal.init(i,{onOpenStart:function(){},onCloseStart:function(){m()},dismissible:!1}).open()};document.querySelectorAll("[data-action='edit']").forEach((e=>{e.addEventListener("click",(e=>{u(e.target.dataset.filename)}))}));const m=()=>{a=null},p=()=>{c=new WebSocket(`${n}ace`),c.addEventListener("message",(e=>{const t=JSON.parse(e.data);if("line"===t.event){const e=JSON.parse(t.data);if("result"===e.type){const t=[];for(const n of e.validation_errors){let e={text:n.message,type:"error",row:0,column:0};null!=n.range&&(e.row=n.range.start_line,e.column=n.range.start_col),t.push(e)}for(const n of e.yaml_errors)t.push({text:n.message,type:"error",row:0,column:0});l.session.setAnnotations(t),t.length?document.querySelector("#js-editor-modal [data-action='upload']").classList.add("disabled"):document.querySelector("#js-editor-modal [data-action='upload']").classList.remove("disabled"),i=!1}else"read_file"===e.type&&f({type:"file_response",content:l.getValue()})}})),c.addEventListener("open",(()=>{const e=JSON.stringify({type:"spawn"});c.send(e)})),c.addEventListener("close",(()=>{c=null,setTimeout(p,5e3)}))},f=e=>{let t=JSON.stringify({type:"stdin",data:JSON.stringify(e)+"\n"});c.send(t)};l.session.on("change",((e,t)=>{let n;return function(){let o=this,a=arguments,s=function(){n=null,e.apply(o,a)};clearTimeout(n),n=setTimeout(s,t)}})((()=>{r=!s}),250)),setInterval((()=>{r&&!i&&null!=c&&(f({type:"validate",file:a}),i=!0,r=!1)}),100);const g=e=>{const t=new RegExp("(?:.([^.]+))?$");".yaml"===e.match(t)[0]||".yml"===e.match(t)[0]?fetch(`./edit?configuration=${e}`,{credentials:"same-origin",method:"POST",body:l.getValue()}).then((e=>{e.text()})).then((()=>{M.toast({html:`✅ Saved <code class="inlinecode">${e}</code>`,displayLength:1e4})})).catch((t=>{M.toast({html:`❌ An error occured saving <code class="inlinecode">${e}</code>`,displayLength:1e4})})):M.toast({html:`❌ File <code class="inlinecode">${e}</code> cannot be saved as it is not a YAML file!`,displayLength:1e4})};document.querySelectorAll("[data-action='save']").forEach((e=>{e.addEventListener("click",(e=>{g(a)}))})),document.querySelectorAll("[data-action='delete']").forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.getAttribute("data-filename");fetch(`./delete?configuration=${t}`,{credentials:"same-origin",method:"POST"}).then((e=>{e.text()})).then((()=>{const e=`<span>🗑️ Deleted <code class="inlinecode">${t}</code>\n                           <button class="btn-flat toast-action">Undo</button>`,n=M.toast({html:e,displayLength:1e4}).el.querySelector(".toast-action");document.querySelector(`.card[data-filename="${t}"]`).remove(),n.addEventListener("click",(()=>{fetch(`./undo-delete?configuration=${t}`,{credentials:"same-origin",method:"POST"}).then((e=>{e.text()})).then((()=>{window.location.reload(!1)}))}))}))}))}));const y=async(e,t)=>{t||(t={}),t.credentials="same-origin";const n=await fetch(e,t);if(!n.ok)throw new Error(`Request not successful (${n.status})`);return n},h=async(e,t)=>(await y(e,t)).text(),v=async(e,t)=>(await y(e,t)).json();class b extends Error{}const w=(e,t,n,o)=>{const a=new URL(`./${e}`,location.href);a.protocol="http:"===a.protocol?"ws:":"wss:";const s=new WebSocket(a.toString());return o&&o.signal.addEventListener("abort",(()=>s.close())),new Promise(((e,o)=>{s.addEventListener("message",(t=>{const a=JSON.parse(t.data);if("line"===a.event&&n)n(a.data);else if("exit"===a.event)if(0===a.code)e(void 0);else{const e=new b(`Error compiling configuration (${a.code})`);e.code=a.code,o(e)}})),s.addEventListener("open",(()=>{s.send(JSON.stringify({type:"spawn",...t}))})),s.addEventListener("close",(()=>{o(new Error("Unexecpted socket closure"))}))}))};let E,L;const S=[],k=e=>{S.push(e);const t=()=>{const t=S.indexOf(e);-1!==t&&(S.splice(t),0===S.length&&(clearTimeout(E),E=void 0,L=void 0))};if(S.length>1){if(L){const t=L;setTimeout((()=>e(t)),0)}return t}return E=window.setTimeout(q,2e3),t},q=async()=>{const e=(new Date).getTime()+2e3;try{L=await v("./ping");for(const e of S)e(L)}finally{if(void 0!==E){const t=Math.max(0,e-(new Date).getTime());E=window.setTimeout(q,t)}}},x=()=>import("./c.33ddc2c5.js").then((function(e){return e.i})),A=e=>{x();const t=document.createElement("esphome-install-dialog");t.configuration=e,document.body.append(t)},j=()=>import("./c.becfc778.js"),O=()=>{j(),document.body.append(document.createElement("esphome-wizard-dialog"))},T=()=>import("./c.4e5da96a.js"),N=()=>import("./c.875a8c34.js"),J=()=>import("./c.e64df527.js"),C=()=>import("./c.5690db6b.js"),_=()=>{C(),document.body.append(document.createElement("esphome-update-all-dialog"))},D=()=>import("./c.cb705aae.js").then((function(e){return e.l}));document.querySelectorAll("[data-action='wizard']").forEach((e=>{e.addEventListener("click",O),e.addEventListener("mouseover",j,{once:!0})})),(()=>{k((e=>{for(let t in e){let n=document.querySelector(`#nodes .card[data-filename="${t}"]`);if(null===n)continue;let o,a=e[t];if(null===a)o="status-unknown";else if(!0===a)o="status-online",n.setAttribute("data-last-connected",Date.now().toString());else if(n.hasAttribute("data-last-connected")){const e=parseInt(n.getAttribute("data-last-connected"));o=Date.now()-e<=5e3?"status-not-responding":"status-offline"}else o="status-offline";n.classList.contains(o)||(n.classList.remove("status-unknown","status-online","status-offline","status-not-responding"),n.classList.add(o))}}));const e=document.createElement("style");e.innerHTML='\n    .online-status {\n      text-transform: uppercase;\n      font-size: 12px;\n      font-weight: bold;\n      display: flex;\n      align-items: baseline;\n    }\n\n    .online-status .indicator {\n      display: inline-block;\n      width: 10px;\n      height: 10px;\n      background-color: grey;\n      margin-right: 5px;\n      border-radius: 50%;\n    }\n\n    .status-unknown .online-status:after {\n      content: "Unknown status";\n    }\n\n    .status-online .online-status:after {\n      content: "Online";\n    }\n    .status-online .online-status .indicator {\n      background-color: var(--alert-success-color);\n    }\n\n    .status-offline .online-status:after {\n      content: "Offline";\n    }\n    .status-offline .online-status .indicator {\n      background-color: var(--alert-error-color);\n    }\n\n    .status-not-responding .online-status:after {\n      content: "Not responding";\n    }\n    .status-not-responding .online-status .indicator {\n      background-color: var(--alert-warning-color);\n    }\n\n    .card.card-error,\n    .card.status-offline {\n      border-top: 4px solid var(--alert-error-color);\n    }\n    .card.status-online {\n      border-top: 4px solid var(--alert-success-color);\n    }\n    .card.status-not-responding {\n      border-top: 4px solid var(--alert-warning-color);\n    }\n    .card.status-unknown {\n      border-top: 4px solid var(--alert-standard-color);\n    }\n  ',document.head.appendChild(e)})(),document.querySelectorAll("[data-action='upload']").forEach((e=>{e.addEventListener("click",(e=>A(e.target.dataset.filename))),e.addEventListener("mouseover",x,{once:!0})})),document.querySelectorAll("[data-action='validate']").forEach((e=>{e.addEventListener("click",(e=>(e=>{T();const t=document.createElement("esphome-validate-dialog");t.configuration=e,document.body.append(t)})(e.target.dataset.filename))),e.addEventListener("mouseover",T,{once:!0})})),document.querySelectorAll("[data-action='clean']").forEach((e=>{e.addEventListener("click",(e=>(e=>{N();const t=document.createElement("esphome-clean-dialog");t.configuration=e,document.body.append(t)})(e.target.dataset.filename))),e.addEventListener("mouseover",N,{once:!0})})),document.querySelectorAll("[data-action='clean-mqtt']").forEach((e=>{e.addEventListener("click",(e=>(e=>{J();const t=document.createElement("esphome-clean-mqtt-dialog");t.configuration=e,document.body.append(t)})(e.target.dataset.filename))),e.addEventListener("mouseover",J,{once:!0})})),document.querySelectorAll("[data-action='update-all']").forEach((e=>{e.addEventListener("click",_),e.addEventListener("mouseover",C,{once:!0})})),document.querySelectorAll("[data-action='logs']").forEach((e=>{e.addEventListener("click",(e=>(e=>{D();const t=document.createElement("esphome-logs-target-dialog");t.configuration=e,document.body.append(t)})(e.target.dataset.filename))),e.addEventListener("mouseover",D,{once:!0})}));export{h as a,k as b,A as c,v as f,u as o,w as s};
