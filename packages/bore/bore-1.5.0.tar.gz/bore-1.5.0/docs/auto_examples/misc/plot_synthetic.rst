
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/misc/plot_synthetic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_misc_plot_synthetic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_misc_plot_synthetic.py:


Multi-start Newton hill-climbing optimization
=============================================

Hello world

.. GENERATED FROM PYTHON SOURCE LINES 8-18

.. code-block:: default

    import numpy as np
    import pandas as pd

    import matplotlib.pyplot as plt
    import seaborn as sns

    from matplotlib.colors import LogNorm
    from mpl_toolkits.mplot3d import Axes3D

    from bore_experiments.benchmarks import GoldsteinPrice, Ackley




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/tiao/.virtualenvs/temp/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    RuntimeError: module compiled against API version 0xe but this version of numpy is 0xd




.. GENERATED FROM PYTHON SOURCE LINES 20-42

.. code-block:: default


    num_runs = 50
    num_iterations = 1000

    seed = 8888  # set random seed for reproducibility
    random_state = np.random.RandomState(seed)

    benchmark = GoldsteinPrice()

    cs = benchmark.get_config_space()
    hx = cs.get_hyperparameter("x0")
    hy = cs.get_hyperparameter("x1")

    # constants
    x_min, x_max = hx.lower, hx.upper
    y_min, y_max = hy.lower, hy.upper

    y, x = np.ogrid[y_min:y_max:200j, x_min:x_max:200j]
    X, Y = np.broadcast_arrays(x, y)

    # def func(x, y):
    #     return benchmark(np.dstack([x, y]))


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/tiao/Repositories/bore/examples/misc/plot_synthetic.py", line 30, in <module>
        hx = cs.get_hyperparameter("x0")
      File "ConfigSpace/configuration_space.pyx", line 758, in ConfigSpace.configuration_space.ConfigurationSpace.get_hyperparameter
    KeyError: "Hyperparameter 'x0' does not exist in this configuration space."




.. GENERATED FROM PYTHON SOURCE LINES 43-58

.. code-block:: default



    fig, ax = plt.subplots()

    contours = ax.contour(X, Y, benchmark.func(X, Y), levels=np.logspace(0, 6, 20),
                          norm=LogNorm(), cmap="turbo")

    fig.colorbar(contours, ax=ax)
    ax.clabel(contours, fmt='%.1f')


    ax.set_xlabel(r"$x_1$")
    ax.set_ylabel(r"$x_2$")

    plt.show()

.. GENERATED FROM PYTHON SOURCE LINES 59-68

.. code-block:: default

    fig, ax = plt.subplots(subplot_kw=dict(projection="3d", azim=-135, elev=35))

    ax.plot_surface(x, y, benchmark.func(X, Y), edgecolor='k', linewidth=0.5, cmap="turbo")

    ax.set_xlabel(r"$x_1$")
    ax.set_ylabel(r"$x_2$")
    ax.set_zlabel(r"$y$")

    plt.show()

.. GENERATED FROM PYTHON SOURCE LINES 69-158

.. code-block:: default


    # # constants
    # x_min, x_max = -5., 5.

    # y, x = np.ogrid[x_min:x_max:200j, x_min:x_max:200j]
    # X, Y = np.broadcast_arrays(x, y)


    # def func(x, y):
    #     return styblinski_tang(np.dstack([x, y]))
    # # %%


    # fig, ax = plt.subplots()

    # ax.contour(X, Y, func(X, Y), cmap="Spectral_r")

    # ax.set_xlabel(r"$x_1$")
    # ax.set_ylabel(r"$x_2$")

    # plt.show()
    # # %%
    # fig, ax = plt.subplots(subplot_kw=dict(projection="3d", azim=-135, elev=35))

    # ax.plot_surface(x, y, func(X, Y), edgecolor='k', linewidth=0.5, cmap="Spectral_r")

    # ax.set_xlabel(r"$x_1$")
    # ax.set_ylabel(r"$x_2$")
    # ax.set_zlabel(r"$y$")

    # plt.show()
    # # %%

    # frames = []
    # for dim in range(2, 20, 2):

    #     xs = x_min + (x_max - x_min) * random_state.rand(num_runs, num_iterations, dim)
    #     ys = styblinski_tang(xs)
    #     y_min = -39.16599 * dim

    #     df = pd.DataFrame(np.abs(y_min - np.minimum.accumulate(ys, axis=1)))
    #     df.index.name = "run"
    #     df.columns.name = "iteration"

    #     s = df.stack()
    #     s.name = "regret"

    #     frame = s.reset_index()
    #     frames.append(frame.assign(name=rf"$D={dim}$"))
    # # %%
    # data = pd.concat(frames, axis="index", sort=True)
    # # %%

    # fig, ax = plt.subplots()

    # sns.lineplot(x="iteration", y="regret", hue="name",
    #              # units="run", estimator=None,
    #              ci="sd", palette="deep", data=data, ax=ax)
    # ax.set_yscale("log")

    # plt.show()
    # # %%

    # fig, ax = plt.subplots()

    # sns.boxplot(x="name", y="regret", palette="deep",
    #             data=data.query(f"iteration == {num_iterations-1}"), ax=ax)

    # ax.set_ylabel(f"final regret (after {num_iterations} evaluations)")

    # plt.show()
    # # %%

    # fig, ax = plt.subplots()

    # sns.lineplot(x="name", y="regret", hue="iteration", palette="viridis_r",
    #              ci=None, linewidth=0.1, data=data, ax=ax)

    # plt.show()
    # # %%

    # fig, ax = plt.subplots()

    # sns.lineplot(x="name", y="regret", ci='sd',
    #              data=data.query(f"iteration == {num_iterations-1}"), ax=ax)

    # ax.set_ylabel(f"final regret (after {num_iterations} evaluations)")

    # plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.200 seconds)


.. _sphx_glr_download_auto_examples_misc_plot_synthetic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_synthetic.py <plot_synthetic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_synthetic.ipynb <plot_synthetic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
