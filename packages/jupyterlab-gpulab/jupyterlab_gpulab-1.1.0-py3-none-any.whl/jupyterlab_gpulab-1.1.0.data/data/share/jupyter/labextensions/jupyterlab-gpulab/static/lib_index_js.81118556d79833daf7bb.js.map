{"version":3,"file":"lib_index_js.81118556d79833daf7bb.js","mappings":";;;;;;;;;;;;;;;;;;;AAAuD;AACN;AACF;AACN;AACF;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe,EAAE,2DAAS;AACzC;AACA;AACA,2BAA2B,yDAAO;AAClC;AACA;AACA,+BAA+B,mDAAM;AACrC;AACA;AACA;AACA,iCAAiC,0EAAwB;AACzD;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,uDAAuD;AACjF,0BAA0B,qDAAqD;AAC/E,0BAA0B,oDAAoD;AAC9E,0BAA0B,wDAAwD;AAClF;AACA,+BAA+B,iDAAI,GAAG,UAAU;AAChD;AACA,uCAAuC,YAAY;AACnD,6BAA6B,mCAAmC;AAChE,6BAA6B,iCAAiC;AAC9D,6BAA6B,gCAAgC;AAC7D,6BAA6B,oCAAoC;AACjE,6BAA6B,oCAAoC;AACjE,6BAA6B,mCAAmC;AAChE;AACA;AACA,iEAAe,SAAS,EAAC","sources":["webpack://jupyterlab-gpulab/./lib/index.js"],"sourcesContent":["import { ICommandPalette } from '@jupyterlab/apputils';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { Toolbar } from '@jupyterlab/apputils';\nimport { Widget } from '@lumino/widgets';\nimport { Menu } from '@lumino/widgets';\n/**\n * Initialization data for jupyterlab-gpulab server extension.\n */\nconst extension = {\n    id: \"jupyterlab-gpulab\",\n    autoStart: true,\n    requires: [ICommandPalette, IMainMenu],\n    activate: async (app, palette, mainMenu) => {\n        document.title = \"GPULab | JupyterLab Environment\";\n        const header = new Toolbar();\n        header.id = 'gpulab-header';\n        header.addClass('jp-gpulab-header');\n        const logoWidget = new Widget();\n        logoWidget.id = 'gpulab-logo';\n        logoWidget.addClass('jp-gpulab-logo');\n        header.addItem(\"logo\", logoWidget);\n        header.addItem(\"spacer\", Toolbar.createSpacerItem());\n        app.shell.add(header, 'header', undefined);\n        const { commands } = app;\n        const portal_command = 'gpulab:launch_portal';\n        const blog_command = 'gpulab:launch_blog';\n        const faq_command = 'gpulab:launch_faq';\n        const contact_command = 'gpulab:launch_contact';\n        const twitter_command = 'gpulab:twitter';\n        const github_command = 'gpulab:github';\n        commands.addCommand(portal_command, {\n            label: 'GPULab Account Portal',\n            caption: 'Open the GPULab portal.',\n            execute: (args) => {\n                window.open(`https://portal.gpulab.io`, 'gpulab-external');\n            }\n        });\n        commands.addCommand(blog_command, {\n            label: 'GPULab Blog',\n            caption: 'Open the GPULab blog/',\n            execute: (args) => {\n                window.open(`https://gpulab.io/blog/`, 'gpulab-external');\n            }\n        });\n        commands.addCommand(faq_command, {\n            label: 'GPULab FAQ',\n            caption: 'Open the GPULab FAQ page.',\n            execute: (args) => {\n                window.open(`https://gpulab.io/faq/`, 'gpulab-external');\n            }\n        });\n        commands.addCommand(contact_command, {\n            label: 'GPULab Contact',\n            caption: 'Open the GPULab contact page.',\n            execute: (args) => {\n                window.open(`https://gpulab.io/blog/`, 'gpulab-external');\n            }\n        });\n        commands.addCommand(twitter_command, {\n            label: 'GPULab Twitter',\n            caption: 'Follow GPULab on Twitter.',\n            execute: (args) => {\n                window.open(`https://twitter.com/gpulabio`, 'gpulab-external');\n            }\n        });\n        commands.addCommand(github_command, {\n            label: 'GPULab GitHub',\n            caption: 'GPULab GitHub repository.',\n            execute: (args) => {\n                window.open(`https://github.com/gpulab`, 'gpulab-external');\n            }\n        });\n        const category = 'GPULab';\n        palette.addItem({ command: portal_command, category: category, args: {} });\n        palette.addItem({ command: blog_command, category: category, args: {} });\n        palette.addItem({ command: faq_command, category: category, args: {} });\n        palette.addItem({ command: contact_command, category: category, args: {} });\n        // Create a GPULab Menu\n        const gpuLabMenu = new Menu({ commands });\n        gpuLabMenu.title.label = 'GPULab';\n        mainMenu.addMenu(gpuLabMenu, { rank: 1000 });\n        gpuLabMenu.addItem({ command: portal_command, args: {} });\n        gpuLabMenu.addItem({ command: blog_command, args: {} });\n        gpuLabMenu.addItem({ command: faq_command, args: {} });\n        gpuLabMenu.addItem({ command: contact_command, args: {} });\n        gpuLabMenu.addItem({ command: twitter_command, args: {} });\n        gpuLabMenu.addItem({ command: github_command, args: {} });\n    }\n};\nexport default extension;\n"],"names":[],"sourceRoot":""}