(self.webpackChunkwidget_periodictable=self.webpackChunkwidget_periodictable||[]).push([[367],{657:(e,t,l)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MODULE_NAME=t.MODULE_VERSION=void 0;const n=l(147);t.MODULE_VERSION=n.version,t.MODULE_NAME=n.name},367:function(e,t,l){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,l,n){void 0===n&&(n=l),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[l]}})}:function(e,t,l,n){void 0===n&&(n=l),e[n]=t[l]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var l in e)"default"!==l&&Object.prototype.hasOwnProperty.call(e,l)&&n(t,e,l);return i(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MCPTableView=t.MCPTableModel=void 0;const o=l(565),d=l(657),a=r(l(311)),c=s(l(755));l(78);const p=[["H","","","","","","","","","","","","","","","","","He"],["Li","Be","","","","","","","","","","","B","C","N","O","F","Ne"],["Na","Mg","","","","","","","","","","","Al","Si","P","S","Cl","Ar"],["K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr"],["Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe"],["Cs","Ba","*","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn"],["Fr","Ra","#","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fi","Mc","Lv","Ts","Og"],["","","","","","","","","","","","","","","","","",""],["","","*","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu"],["","","#","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr"]],u=[];for(const e of p)for(const t of e)""!==t&&"*"!==t&&u.push(t);class b extends o.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:b.model_name,_model_module:b.model_module,_model_module_version:b.model_module_version,_view_name:b.view_name,_view_module:b.view_module,_view_module_version:b.view_module_version,value:"Hello World"}}}t.MCPTableModel=b,b.serializers={...o.DOMWidgetModel.serializers},b.model_name="MCPTableModel",b.model_module=d.MODULE_NAME,b.model_module_version=d.MODULE_VERSION,b.view_name="MCPTableView",b.view_module=d.MODULE_NAME,b.view_module_version=d.MODULE_VERSION;class m extends o.DOMWidgetView{constructor(){super(...arguments),this.tableTemplate=a.template('<% for (let elementRow of elementTable) { print("<div class=\'periodic-table-row\'>"); for (let elementName of elementRow) { if ( (elementName === "") || (elementName == "*" ) || (elementName == "#" ) ) { %>  <span class="periodic-table-empty noselect" style="width: <%= elementWidth %>; height: <%= elementWidth %>;"><%= elementName %></span><% } else { %>  <span class="<% if (disabledElements.includes(elementName)) { print(" periodic-table-disabled"); } else { print(" periodic-table-entry"); }%>  noselect element-<%= elementName %><% if (selectedElements.includes(elementName) && (! disabledElements.includes(elementName)) ) { print(" elementOn"); } %>" style="width: <%= elementWidth %>; height: <%= elementWidth %>; border-color: <% if (disabled) { colors = borderColor.replace(/[^\\d,]/g, "").split(","); red = Math.round(255 - 0.38 * ( 255 - parseInt(colors[0], 10) )); green = Math.round(255 - 0.38 * ( 255 - parseInt(colors[1], 10) )); blue = Math.round(255 - 0.38 * ( 255 - parseInt(colors[2], 10) )); print("rgb(" + red.toString(10) + "," + green.toString(10) + "," + blue.toString(10) + ")"); } else { print(borderColor); } %>; background-color: <% if (disabledElements.includes(elementName)) { color = disabledColor; } else if (selectedElements.includes(elementName)) { i = selectedElements.indexOf(elementName); color = selectedColors[selectedStates[i]]; } else { color = unselectedColor; } if (disabled) { colors = color.replace(/[^\\d,]/g, "").split(","); red = Math.round(255 - 0.38 * ( 255 - parseInt(colors[0], 10) )); green = Math.round(255 - 0.38 * ( 255 - parseInt(colors[1], 10) )); blue = Math.round(255 - 0.38 * ( 255 - parseInt(colors[2], 10) )); print("rgb(" + red.toString(10) + "," + green.toString(10) + "," + blue.toString(10) + ")"); } else { print(color); } %>"><% print(displayNamesReplacements[elementName] || elementName); %></span><% } }; print("</div>"); } %>')}render(){this.rerenderScratch(),this.model.on("change:selected_elements",this.rerenderScratch,this),this.model.on("change:disabled_elements",this.rerenderScratch,this),this.model.on("change:display_names_replacements",this.rerenderScratch,this),this.model.on("change:border_color",this.rerenderScratch,this),this.model.on("change:width",this.rerenderScratch,this),this.model.on("change:disabled",this.rerenderScratch,this)}events(){return{"click .periodic-table-entry":"toggleElement","click .periodic-table-disabled":"toggleElement"}}toggleElement(e){const t=a.map(e.target.classList,(e=>e)),l=a.chain(t).filter((e=>e.startsWith("element-"))).map((e=>e.slice("element-".length))).first().value(),n=a.includes(t,"elementOn"),i=a.includes(t,"periodic-table-disabled"),r=this.model.get("states");if(!this.model.get("disabled")&&void 0!==l){const t=this.model.get("selected_elements");let s=[];const o=[];for(const e in t)s.push(e),o.push(t[e]);const d=s.indexOf(l);if(n)o[d]<r-1?(o[d]++,t[l]=o[d]):(s=a.without(s,l),o.splice(d,1),delete t[l],e.target.classList.remove("elementOn"));else{if(i)return;s.push(l),o.push(0),t[l]=0,e.target.classList.add("elementOn")}this.model.set("selected_elements",{Du:0}),this.touch(),this.model.set("selected_elements",t),this.touch()}}rerenderScratch(){const e=this.model.get("selected_elements"),t=this.model.get("disabled_elements"),l=this.model.get("disabled_color"),n=this.model.get("unselected_color"),i=this.model.get("selected_colors").slice(),r=this.model.get("width"),s=this.model.get("border_color");let o=[];const d=[];if("Du"in e)return;for(const t in e)o.push(t),d.push(e[t]);if(o.length!==d.length)return;const c=o.length;if(o=a.difference(o,t),o=a.intersection(o,u),o.length!==c){for(const t in e)o.includes(t)||delete e[t];this.model.set("selected_elements",e),this.touch()}this.el.innerHTML='<div class="periodic-table-body">'+this.tableTemplate({elementTable:p,displayNamesReplacements:this.model.get("display_names_replacements"),selectedElements:o,disabledElements:t,disabledColor:l,unselectedColor:n,selectedColors:i,selectedStates:d,elementWidth:r,borderColor:s,disabled:this.model.get("disabled")})+"</div>"}renderBorder(){const e=document.getElementsByClassName("periodic-table-entry"),t=this.model.get("border_color");for(let l=0;l<e.length;l++)e[l].style.border="1px solid "+t}renderWidth(){const e=document.getElementsByClassName("periodic-table-entry"),t=document.getElementsByClassName("periodic-table-disabled"),l=document.getElementsByClassName("periodic-table-empty"),n=this.model.get("width");let i=14;i=Number.parseFloat(n.slice(0,-2))/38*14,c.default("body").css("font-size",String(i)+"px");for(let t=0;t<e.length;t++)e[t].style.width=n,e[t].style.height=n;for(let e=0;e<t.length;e++)t[e].style.width=n,t[e].style.height=n;for(let e=0;e<l.length;e++)l[e].style.width=n,l[e].style.height=n}}t.MCPTableView=m},85:(e,t,l)=>{(t=l(645)(!1)).push([e.id,".periodic-table-entry {\n    border: 1px solid;\n    border-color: #cc7777;\n    border-radius: 3px;\n    width: 38px;\n    height: 38px;\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n    background-color: #ffaaaa;\n}\n\n.periodic-table-disabled {\n    border-radius: 3px;\n    width: 38px;\n    height: 38px;\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n    background-color: #999999;\n}\n\n.periodic-table-empty {\n    border: 0px;\n    width: 38px;\n    height: 38px;\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n}\n\n.periodic-table-row {\n    display: table-row;\n}\n\n.periodic-table-body {\n    display: table; border-spacing: 4px;\n}\n\n.periodic-table-entry:hover {\n    background-color: #cc7777;\n}\n\n.periodic-table-entry.elementOn {\n    background-color: #aaaaff;\n    border: 1px solid #7777cc;\n    border-radius: 4px;\n}\n\n\n.periodic-table-entry.elementOn:hover {\n    background-color: #7777cc;\n    border: 1px solid #7777cc;\n    border-radius: 4px;\n}\n\n.noselect {\n    -webkit-touch-callout: none; /* iOS Safari */\n      -webkit-user-select: none; /* Safari */\n       -khtml-user-select: none; /* Konqueror HTML */\n         -moz-user-select: none; /* Firefox */\n          -ms-user-select: none; /* Internet Explorer/Edge */\n              user-select: none; /* Non-prefixed version, currently\n                                    supported by Chrome and Opera */\n  }\n",""]),e.exports=t},78:(e,t,l)=>{var n=l(379),i=l(85);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.id,i,""]]);n(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},147:e=>{"use strict";e.exports=JSON.parse('{"name":"widget-periodictable","version":"3.0.0","description":"A jupyter widget for a interactive periodic table.","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets"],"files":["lib/**/*.js","dist/*.js","css/*.css"],"homepage":"https://github.com/osscar-org/widget-periodictable","bugs":{"url":"https://github.com/osscar-org/widget-periodictable/issues"},"license":"BSD-3-Clause","author":{"name":"Dou Du, Casper Welzel Andersen and Giovanni Pizzi","email":"dou.du@epfl.ch"},"main":"lib/index.js","types":"./lib/index.d.ts","repository":{"type":"git","url":"https://github.com/osscar-org/widget-periodictable"},"scripts":{"build":"yarn run build:lib && yarn run build:nbextension && yarn run build:labextension:dev","build:prod":"yarn run build:lib && yarn run build:nbextension && yarn run build:labextension","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","build:nbextension":"webpack","clean":"yarn run clean:lib && yarn run clean:nbextension && yarn run clean:labextension","clean:lib":"rimraf lib","clean:labextension":"rimraf widget_periodictable/labextension","clean:nbextension":"rimraf widget_periodictable/nbextension/static/index.js","lint":"eslint . --ext .ts,.tsx --fix","lint:check":"eslint . --ext .ts,.tsx","prepack":"yarn run build:lib","test":"jest","watch":"npm-run-all -p watch:*","watch:lib":"tsc -w","watch:nbextension":"webpack --watch --mode=development","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@jupyter-widgets/base":"^1.1.10 || ^2.0.0 || ^3.0.0 || ^4.0.0"},"devDependencies":{"@babel/core":"^7.5.0","@babel/preset-env":"^7.5.0","@jupyterlab/builder":"^3.0.0","@phosphor/application":"^1.6.0","@phosphor/widgets":"^1.6.0","@types/jest":"^26.0.0","@types/webpack-env":"^1.13.6","@typescript-eslint/eslint-plugin":"^3.6.0","@typescript-eslint/parser":"^3.6.0","acorn":"^7.2.0","css-loader":"^3.2.0","eslint":"^7.4.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","fs-extra":"^7.0.0","identity-obj-proxy":"^3.0.0","jest":"^26.0.0","mkdirp":"^0.5.1","npm-run-all":"^4.1.3","prettier":"^2.0.5","rimraf":"^2.6.2","source-map-loader":"^1.1.3","style-loader":"^1.0.0","ts-jest":"^26.0.0","ts-loader":"^8.0.0","typescript":"~4.1.3","webpack":"^5.0.0","webpack-cli":"^4.0.0"},"jupyterlab":{"extension":"lib/plugin","outputDir":"widget_periodictable/labextension/","sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}}}}')}}]);