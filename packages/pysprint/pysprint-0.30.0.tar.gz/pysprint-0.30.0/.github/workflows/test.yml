name: test-pysprint

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
      - name: Rust unit tests
        run: cargo test
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Python unit tests
        run: |
          python3 -m venv venv3
          source venv3/bin/activate
          python3 -m pip install -r requirements.txt
          python3 -m pip install pytest maturin
          maturin develop
          cd pysprint/tests
          pytest -v
  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
      - name: Rust unit tests
        run: cargo test
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Python unit tests
        run: |
          python -m venv venv3
          venv3\Scripts\Activate.ps1
          python -m pip install -r requirements.txt
          python -m pip install pytest maturin
          maturin develop
          cd pysprint/tests
          pytest -v
