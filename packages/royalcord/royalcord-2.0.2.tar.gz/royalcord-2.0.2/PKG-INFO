Metadata-Version: 2.1
Name: royalcord
Version: 2.0.2
Summary: An API wrapper for Discord written in Python.
Home-page: https://github.com/Mythical-Studio/RoyalCord
Author: Mythical-Studio & Rapptz
License: MIT
Project-URL: Issue tracker, https://github.com/Mythical-Studio/RoyalCord/issues
Description: # royalcord
           [Discord server invite](https://discord.gg/Vg4QGyvpxw)
           [Pypi](https://pypi.python.org/pypi/royalcord)
        
        - A modern, easy to use, feature-rich, and async ready API wrapper for Discord written in Python.
        
        Key Features
        
        - Modern Pythonic API using ``async`` and ``await``.
        - Proper rate limit handling.
        - Optimised in both speed and memory.
        
        Installing
        
        **Python 3.8 or higher is required**
        
        To install the library without full voice support, you can just run the following command:
        
        ```
            # Linux/macOS
            python3 -m pip install -U royalcord
        
            # Windows
            py -3 -m pip install -U royalcord
        ```
        
        Otherwise to get voice support you should run the following command:
        
        
            # Linux/macOS
            python3 -m pip install -U "royalcord[voice]"
        
            # Windows
            py -3 -m pip install -U royalcord[voice]
        
        
        To install the development version, do the following:
        
        ```
            $ git clone https://github.com/Mythical-Studio/RoyalCord
            $ cd royalcord
            $ python3 -m pip install -U .[voice]
        ```
        
        
        Optional Packages
        
        * `PyNaCl <https://pypi.org/project/PyNaCl/>`__ (for voice support)
        
        Please note that on Linux installing voice you must install the following packages via your favourite package manager (e.g. ``apt``, ``dnf``, etc) before running the above commands:
        
        * libffi-dev (or ``libffi-devel`` on some systems)
        * python-dev (e.g. ``python3.6-dev`` for Python 3.6)
        
        Quick Example
        --------------
        
        ```py
        
            import discord
        
            class MyClient(discord.Client):
                async def on_ready(self):
                    print('Logged on as', self.user)
        
                async def on_message(self, message):
                    # don't respond to ourselves
                    if message.author == self.user:
                        return
        
                    if message.content == 'ping':
                        await message.channel.send('pong')
        
            client = MyClient()
            client.run('token')
        ```
        
        Bot Example
        
        ```py
        import discord
        from discord.ext import commands
        
        bot = commands.Bot(command_prefix='>')
        
        @bot.command()
        async def ping(ctx):
                await ctx.send('pong')
        
        bot.run('token')
        ```
        
        You can find more examples in the examples directory.
        
        #### Links
        
        - `Documentation Currently None`_
        - `Official Discord Server <https://discord.gg/Vg4QGyvpxw>`_
        - `Discord API <https://discord.gg/discord-api>`_
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Python: >=3.8.0
Description-Content-Type: text/markdown
Provides-Extra: voice
Provides-Extra: docs
Provides-Extra: speed
