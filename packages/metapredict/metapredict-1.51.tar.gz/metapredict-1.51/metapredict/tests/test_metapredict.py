"""
Unit and regression test for the metapredict package.

This is extremely underdone at this point... Sorry about that :'(
"""

# Import package, test suite, and other packages as needed
import metapredict
from metapredict import meta
import metapredict.backend.uniprot_predictions
from metapredict.backend.uniprot_predictions import fetch_sequence
import pytest
import sys
import os


current_filepath = os.getcwd()
fasta_filepath = "{}/input_data/testing.fasta".format(current_filepath)

def test_metapredict_imported():
    """Sample test, will always pass so long as import statement worked"""
    assert "metapredict" in sys.modules

def test_metapredict_predictor():
    # testing with normalization
    assert meta.predict_disorder('AERDEDNRSKEKKRNKKTNGAGDEHRDKPWSNNSTHPTHRKNEGPMHGDP') == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.938]
    # testing without normalization
    assert meta.predict_disorder('AERDEDNRSKEKKRNKKTNGAGDEHRDKPWSNNSTHPTHRKNEGPMHGDP', normalized=False) == [1.055, 1.097, 1.062, 1.087, 1.068, 1.078, 1.089, 1.04, 1.032, 1.025, 1.006, 1.002, 1.007, 0.998, 1.033, 1.032, 1.039, 1.045, 1.061, 1.088, 1.093, 1.092, 1.096, 1.077, 1.058, 1.033, 1.034, 1.019, 1.057, 1.1, 1.05, 1.074, 1.083, 1.078, 1.103, 1.084, 1.052, 1.047, 1.044, 1.065, 1.082, 1.071, 1.119, 1.126, 1.043, 1.13, 1.208, 1.152, 1.155, 0.938]

def test_metapredict_functions():
    # make sure the disorder domains prediction works
    # pytest isn't a fan of the output of this so breaking it up
    assert meta.predict_disorder_domains('MKAPSNGFLPSSNEGEKKPINSQLWHACAGPLVSLPPVGSLVVYFPQGHSEQVAASMQKQTDFIPNYPNLPSKLICLLHSVTLHADTETDEVYAQMTLQPVNKY')[0] == [0.83, 0.893, 0.887, 0.86, 0.817, 0.797, 0.775, 0.679, 0.663, 0.738, 0.735, 0.71, 0.662, 0.633, 0.602, 0.565, 0.532, 0.507, 0.494, 0.458, 0.383, 0.372, 0.396, 0.359, 0.204, 0.157, 0.134, 0.09, 0.088, 0.1, 0.124, 0.127, 0.112, 0.103, 0.095, 0.082, 0.096, 0.112, 0.09, 0.116, 0.114, 0.04, 0.011, 0.046, 0.132, 0.158, 0.13, 0.108, 0.11, 0.112, 0.133, 0.159, 0.117, 0.134, 0.146, 0.176, 0.148, 0.189, 0.185, 0.219, 0.243, 0.281, 0.224, 0.202, 0.223, 0.212, 0.187, 0.167, 0.16, 0.126, 0.071, 0.086, 0.129, 0.082, 0.007, 0, 0, 0, 0.0, 0, 0.025, 0.039, 0.107, 0.157, 0.176, 0.157, 0.132, 0.127, 0.112, 0.126, 0.152, 0.122, 0.105, 0.184, 0.215, 0.226, 0.292, 0.36, 0.475, 0.434, 0.502, 0.534, 0.534, 0.473]
    # pytest doesn't like the np.array, so just goign to check the sum of the disorder instead.
    assert round(sum(meta.predict_disorder_domains('MKAPSNGFLPSSNEGEKKPINSQLWHACAGPLVSLPPVGSLVVYFPQGHSEQVAASMQKQTDFIPNYPNLPSKLICLLHSVTLHADTETDEVYAQMTLQPVNKY')[1]), 4) == 27.9202
    assert meta.predict_disorder_domains('MKAPSNGFLPSSNEGEKKPINSQLWHACAGPLVSLPPVGSLVVYFPQGHSEQVAASMQKQTDFIPNYPNLPSKLICLLHSVTLHADTETDEVYAQMTLQPVNKY')[2] == [[0, 20, 'MKAPSNGFLPSSNEGEKKPI']]
    assert meta.predict_disorder_domains('MKAPSNGFLPSSNEGEKKPINSQLWHACAGPLVSLPPVGSLVVYFPQGHSEQVAASMQKQTDFIPNYPNLPSKLICLLHSVTLHADTETDEVYAQMTLQPVNKY')[3] == [[20, 104, 'NSQLWHACAGPLVSLPPVGSLVVYFPQGHSEQVAASMQKQTDFIPNYPNLPSKLICLLHSVTLHADTETDEVYAQMTLQPVNKY']]
    # make sure the uniprot preidction works
    assert meta.predict_disorder_uniprot('Q8N6T3') == [0.746, 0.807, 0.777, 0.66, 0.634, 0.572, 0.536, 0.523, 0.445, 0.293, 0.277, 0.267, 0.208, 0.207, 0.152, 0.17, 0.186, 0.206, 0.246, 0.268, 0.244, 0.132, 0.05, 0.026, 0.049, 0.035, 0.043, 0.057, 0.054, 0.027, 0.051, 0.051, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.006, 0.019, 0.08, 0.112, 0.079, 0.064, 0.051, 0.049, 0.052, 0.047, 0.022, 0.033, 0.004, 0.022, 0, 0.014, 0.045, 0.05, 0.002, 0.031, 0.031, 0.036, 0.004, 0, 0, 0, 0, 0.01, 0.03, 0.058, 0.113, 0.101, 0.102, 0.144, 0.145, 0.15, 0.138, 0.142, 0.136, 0.133, 0.076, 0.101, 0.1, 0.099, 0.195, 0.265, 0.213, 0.174, 0.17, 0.176, 0.139, 0.122, 0.126, 0.103, 0.081, 0.082, 0.078, 0.106, 0.074, 0.043, 0.041, 0.054, 0.017, 0.015, 0.016, 0.015, 0.017, 0.018, 0.039, 0.037, 0.004, 0, 0.014, 0.086, 0.144, 0.216, 0.293, 0.293, 0.288, 0.301, 0.347, 0.355, 0.432, 0.467, 0.504, 0.518, 0.565, 0.637, 0.648, 0.674, 0.713, 0.659, 0.654, 0.662, 0.681, 0.665, 0.647, 0.602, 0.585, 0.499, 0.555, 0.529, 0.481, 0.465, 0.513, 0.517, 0.48, 0.495, 0.521, 0.536, 0.56, 0.53, 0.528, 0.488, 0.522, 0.48, 0.476, 0.443, 0.422, 0.408, 0.391, 0.286, 0.277, 0.297, 0.219, 0.205, 0.238, 0.236, 0.241, 0.226, 0.287, 0.294, 0.27, 0.331, 0.352, 0.344, 0.368, 0.391, 0.395, 0.419, 0.389, 0.434, 0.478, 0.52, 0.526, 0.571, 0.596, 0.598, 0.603, 0.571, 0.523, 0.502, 0.479, 0.437, 0.416, 0.402, 0.336, 0.217, 0.229, 0.223, 0.197, 0.158, 0.166, 0.186, 0.174, 0.201, 0.245, 0.255, 0.239, 0.28, 0.273, 0.235, 0.294, 0.287, 0.297, 0.274, 0.296, 0.295, 0.26, 0.331, 0.342, 0.336, 0.357, 0.372, 0.388, 0.426, 0.429, 0.478, 0.506, 0.469, 0.543, 0.571, 0.572, 0.54, 0.567, 0.545, 0.526, 0.497, 0.52, 0.508, 0.439, 0.489, 0.462, 0.467, 0.391, 0.425, 0.418, 0.419, 0.357, 0.325, 0.356, 0.37, 0.326, 0.342, 0.339, 0.335, 0.299, 0.329, 0.33, 0.358, 0.361, 0.325, 0.323, 0.379, 0.375, 0.343, 0.373, 0.368, 0.381, 0.336, 0.393, 0.39, 0.339, 0.381, 0.411, 0.404, 0.382, 0.426, 0.453, 0.422, 0.461, 0.457, 0.438, 0.454, 0.351, 0.35, 0.337, 0.269, 0.309, 0.339, 0.349, 0.455, 0.417, 0.47, 0.516, 0.543, 0.557, 0.596, 0.678, 0.696, 0.685, 0.719, 0.755, 0.769, 0.766, 0.761, 0.725, 0.706, 0.645, 0.657, 0.639, 0.622, 0.592, 0.544, 0.564, 0.544, 0.486, 0.516, 0.502, 0.484, 0.463, 0.407, 0.448, 0.436, 0.465, 0.434, 0.462, 0.501, 0.53, 0.574, 0.536, 0.576, 0.638, 0.658, 0.722, 0.78, 0.819, 0.87, 0.915, 0.94, 0.965, 0.989, 0.973, 0.936, 0.901, 0.834, 0.804, 0.827, 0.761, 0.724, 0.734, 0.74, 0.762, 0.778, 0.801, 0.801, 0.8, 0.812, 0.799, 0.785, 0.738, 0.728, 0.764, 0.728, 0.65, 0.645, 0.708, 0.74, 0.767, 0.823, 0.872, 0.911, 0.929, 0.971, 1, 1, 1, 1, 1, 1, 1, 1, 0.996, 0.93, 0.898, 0.9, 0.905, 0.911, 0.95, 0.931, 0.869, 0.851, 0.93, 0.902, 0.903, 0.887, 0.897, 0.803, 0.873, 0.913, 0.867, 0.937, 0.91, 0.794]
    # make sure fetching uniprot sequence works
    assert fetch_sequence('Q8N6T3') == 'MASPRTRKVLKEVRVQDENNVCFECGAFNPQWVSVTYGIWICLECSGRHRGLGVHLSFVRSVTMDKWKDIELEKMKAGGNAKFREFLESQEDYDPCWSLQEKYNSRAAALFRDKVVALAEGREWSLESSPAQNWTPPQPRTLPSMVHRVSGQPQSVTASSDKAFEDWLNDDLGSYQGAQGNRYVGFGNTPPPQKKEDDFLNNAMSSLYSGWSSFTTGASRFASAAKEGATKFGSQASQKASELGHSLNENVLKPAQEKVKEGKIFDDVSSGVSQLASKVQGVGSKGWRDVTTFFSGKAEGPLDSPSEGHSYQNSGLDHFQNSNIDQSFWETFGSAEPTKTRKSPSSDSWTCADTSTERRSSDSWEVWGSASTNRNSNSDGGEGGEGTKKAVPPAVPTDDGWDNQNW'
    # make sure percent disorder predictions work

    expected = {0.05 : 87.7,
                0.1 : 82.8,
                0.2 : 74.9,
                0.3 : 63.5}
    for thresh in [0.05, 0.1, 0.2, 0.3]:
        assert meta.percent_disorder('MASPRTRKVLKEVRVQDENNVCFECGAFNPQWVSVTYGIWICLECSGRHRGLGVHLSFVRSVTMDKWKDIELEKMKAGGNAKFREFLESQEDYDPCWSLQEKYNSRAAALFRDKVVALAEGREWSLESSPAQNWTPPQPRTLPSMVHRVSGQPQSVTASSDKAFEDWLNDDLGSYQGAQGNRYVGFGNTPPPQKKEDDFLNNAMSSLYSGWSSFTTGASRFASAAKEGATKFGSQASQKASELGHSLNENVLKPAQEKVKEGKIFDDVSSGVSQLASKVQGVGSKGWRDVTTFFSGKAEGPLDSPSEGHSYQNSGLDHFQNSNIDQSFWETFGSAEPTKTRKSPSSDSWTCADTSTERRSSDSWEVWGSASTNRNSNSDGGEGGEGTKKAVPPAVPTDDGWDNQNW', cutoff=thresh) == expected[thresh]

    # make sure fasta stuff works
    assert meta.predict_disorder_fasta(fasta_filepath) == {'Q8N6T3': [0.746, 0.807, 0.777, 0.66, 0.634, 0.572, 0.536, 0.523, 0.445, 0.293, 0.277, 0.267, 0.208, 0.207, 0.152, 0.17, 0.186, 0.206, 0.246, 0.268, 0.244, 0.132, 0.05, 0.026, 0.049, 0.035, 0.043, 0.057, 0.054, 0.027, 0.051, 0.051, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.006, 0.019, 0.08, 0.112, 0.079, 0.064, 0.051, 0.049, 0.052, 0.047, 0.022, 0.033, 0.004, 0.022, 0, 0.014, 0.045, 0.05, 0.002, 0.031, 0.031, 0.036, 0.004, 0, 0, 0, 0, 0.01, 0.03, 0.058, 0.113, 0.101, 0.102, 0.144, 0.145, 0.15, 0.138, 0.142, 0.136, 0.133, 0.076, 0.101, 0.1, 0.099, 0.195, 0.265, 0.213, 0.174, 0.17, 0.176, 0.139, 0.122, 0.126, 0.103, 0.081, 0.082, 0.078, 0.106, 0.074, 0.043, 0.041, 0.054, 0.017, 0.015, 0.016, 0.015, 0.017, 0.018, 0.039, 0.037, 0.004, 0, 0.014, 0.086, 0.144, 0.216, 0.293, 0.293, 0.288, 0.301, 0.347, 0.355, 0.432, 0.467, 0.504, 0.518, 0.565, 0.637, 0.648, 0.674, 0.713, 0.659, 0.654, 0.662, 0.681, 0.665, 0.647, 0.602, 0.585, 0.499, 0.555, 0.529, 0.481, 0.465, 0.513, 0.517, 0.48, 0.495, 0.521, 0.536, 0.56, 0.53, 0.528, 0.488, 0.522, 0.48, 0.476, 0.443, 0.422, 0.408, 0.391, 0.286, 0.277, 0.297, 0.219, 0.205, 0.238, 0.236, 0.241, 0.226, 0.287, 0.294, 0.27, 0.331, 0.352, 0.344, 0.368, 0.391, 0.395, 0.419, 0.389, 0.434, 0.478, 0.52, 0.526, 0.571, 0.596, 0.598, 0.603, 0.571, 0.523, 0.502, 0.479, 0.437, 0.416, 0.402, 0.336, 0.217, 0.229, 0.223, 0.197, 0.158, 0.166, 0.186, 0.174, 0.201, 0.245, 0.255, 0.239, 0.28, 0.273, 0.235, 0.294, 0.287, 0.297, 0.274, 0.296, 0.295, 0.26, 0.331, 0.342, 0.336, 0.357, 0.372, 0.388, 0.426, 0.429, 0.478, 0.506, 0.469, 0.543, 0.571, 0.572, 0.54, 0.567, 0.545, 0.526, 0.497, 0.52, 0.508, 0.439, 0.489, 0.462, 0.467, 0.391, 0.425, 0.418, 0.419, 0.357, 0.325, 0.356, 0.37, 0.326, 0.342, 0.339, 0.335, 0.299, 0.329, 0.33, 0.358, 0.361, 0.325, 0.323, 0.379, 0.375, 0.343, 0.373, 0.368, 0.381, 0.336, 0.393, 0.39, 0.339, 0.381, 0.411, 0.404, 0.382, 0.426, 0.453, 0.422, 0.461, 0.457, 0.438, 0.454, 0.351, 0.35, 0.337, 0.269, 0.309, 0.339, 0.349, 0.455, 0.417, 0.47, 0.516, 0.543, 0.557, 0.596, 0.678, 0.696, 0.685, 0.719, 0.755, 0.769, 0.766, 0.761, 0.725, 0.706, 0.645, 0.657, 0.639, 0.622, 0.592, 0.544, 0.564, 0.544, 0.486, 0.516, 0.502, 0.484, 0.463, 0.407, 0.448, 0.436, 0.465, 0.434, 0.462, 0.501, 0.53, 0.574, 0.536, 0.576, 0.638, 0.658, 0.722, 0.78, 0.819, 0.87, 0.915, 0.94, 0.965, 0.989, 0.973, 0.936, 0.901, 0.834, 0.804, 0.827, 0.761, 0.724, 0.734, 0.74, 0.762, 0.778, 0.801, 0.801, 0.8, 0.812, 0.799, 0.785, 0.738, 0.728, 0.764, 0.728, 0.65, 0.645, 0.708, 0.74, 0.767, 0.823, 0.872, 0.911, 0.929, 0.971, 1, 1, 1, 1, 1, 1, 1, 1, 0.996, 0.93, 0.898, 0.9, 0.905, 0.911, 0.95, 0.931, 0.869, 0.851, 0.93, 0.902, 0.903, 0.887, 0.897, 0.803, 0.873, 0.913, 0.867, 0.937, 0.91, 0.794]}
