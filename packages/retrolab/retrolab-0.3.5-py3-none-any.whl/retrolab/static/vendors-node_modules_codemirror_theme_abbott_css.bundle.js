/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] = self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] || []).push([["vendors-node_modules_codemirror_theme_abbott_css"],{

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/codemirror/theme/abbott.css":
/*!******************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/codemirror/theme/abbott.css ***!
  \******************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n * abbott.css\\n * A warm, dark theme for prose and code, with pastels and pretty greens.\\n *\\n * Ported from abbott.vim (https://github.com/bcat/abbott.vim) version 2.1.\\n * Original design and CodeMirror port by Jonathan Rascher.\\n *\\n * This theme shares the following color palette with the Vim color scheme.\\n *\\n * Brown shades:\\n *   bistre: #231c14\\n *   chocolate: #3c3022\\n *   cocoa: #745d42\\n *   vanilla_cream: #fef3b4\\n *\\n * Red shades:\\n *   crimson: #d80450\\n *   cinnabar: #f63f05\\n *\\n * Green shades:\\n *   dark_olive: #273900\\n *   forest_green: #24a507\\n *   chartreuse: #a0ea00\\n *   pastel_chartreuse: #d8ff84\\n *\\n * Yellow shades:\\n *   marigold: #fbb32f\\n *   lemon_meringue: #fbec5d\\n *\\n * Blue shades:\\n *   cornflower_blue: #3f91f1\\n *   periwinkle_blue: #8ccdf0\\n *\\n * Magenta shades:\\n *   french_pink: #ec6c99\\n *   lavender: #e6a2f3\\n *\\n * Cyan shades:\\n *   zomp: #39a78d\\n *   seafoam_green: #00ff7f\\n */\\n\\n/* Style the UI: */\\n\\n/* Equivalent to Vim's Normal group. */\\n.cm-s-abbott.CodeMirror {\\n  background: #231c14 /* bistre */;\\n  color: #d8ff84 /* pastel_chartreuse */;\\n}\\n\\n/* Roughly equivalent to Vim's LineNr group. */\\n.cm-s-abbott .CodeMirror-gutters {\\n  background: #231c14 /* bistre */;\\n  border: none;\\n}\\n.cm-s-abbott .CodeMirror-linenumber { color: #fbec5d /* lemon_meringue */; }\\n\\n.cm-s-abbott .CodeMirror-guttermarker { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's FoldColumn group. */\\n.cm-s-abbott .CodeMirror-guttermarker-subtle { color: #fbb32f /* marigold */; }\\n\\n/*\\n * Roughly equivalent to Vim's CursorColumn group. (We use a brighter color\\n * since Vim's cursorcolumn option highlights a whole column, whereas\\n * CodeMirror's rule just highlights a thin line.)\\n */\\n.cm-s-abbott .CodeMirror-ruler { border-color: #745d42 /* cocoa */; }\\n\\n/* Equivalent to Vim's Cursor group in insert mode. */\\n.cm-s-abbott .CodeMirror-cursor { border-color: #a0ea00 /* chartreuse */; }\\n\\n/* Equivalent to Vim's Cursor group in normal mode. */\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursor,\\n.cm-s-abbott .cm-animate-fat-cursor {\\n  /*\\n   * CodeMirror doesn't allow changing the foreground color of the character\\n   * under the cursor, so we can't use a reverse video effect for the cursor.\\n   * Instead, make it semitransparent.\\n   */\\n  background: rgba(160, 234, 0, 0.5) /* chartreuse */;\\n}\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursors {\\n  /*\\n   * Boost the z-index so the fat cursor shows up on top of text and\\n   * matchingbracket/matchingtag highlights.\\n   */\\n  z-index: 3;\\n}\\n\\n/* Equivalent to Vim's Cursor group in replace mode. */\\n.cm-s-abbott .CodeMirror-overwrite .CodeMirror-cursor {\\n  border-bottom: 1px solid #a0ea00 /* chartreuse */;\\n  border-left: none;\\n  width: auto;\\n}\\n\\n/* Roughly equivalent to Vim's CursorIM group. */\\n.cm-s-abbott .CodeMirror-secondarycursor {\\n  border-color: #00ff7f /* seafoam_green */;\\n}\\n\\n/* Roughly equivalent to Vim's Visual group. */\\n.cm-s-abbott .CodeMirror-selected,\\n.cm-s-abbott.CodeMirror-focused .CodeMirror-selected {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::selection,\\n.cm-s-abbott .CodeMirror-line > span::selection,\\n.cm-s-abbott .CodeMirror-line > span > span::selection {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span > span::-moz-selection {\\n  background: #273900 /* dark_olive */;\\n}\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott .cm-tab { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Search group. */\\n.cm-s-abbott .cm-searching {\\n  background: #fef3b4 /* vanilla_cream */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n/* Style syntax highlighting modes: */\\n\\n/* Equivalent to Vim's Comment group. */\\n.cm-s-abbott span.cm-comment {\\n  color: #fbb32f /* marigold */;\\n  font-style: italic;\\n}\\n\\n/* Equivalent to Vim's String group. */\\n.cm-s-abbott span.cm-string,\\n.cm-s-abbott span.cm-string-2 {\\n  color: #e6a2f3 /* lavender */;\\n}\\n\\n/* Equivalent to Vim's Constant group. */\\n.cm-s-abbott span.cm-number,\\n.cm-s-abbott span.cm-string.cm-url { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott span.cm-invalidchar { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Special group. */\\n.cm-s-abbott span.cm-atom { color: #fef3b4 /* vanilla_cream */; }\\n\\n/* Equivalent to Vim's Delimiter group. */\\n.cm-s-abbott span.cm-bracket,\\n.cm-s-abbott span.cm-punctuation {\\n  color: #fef3b4 /* vanilla_cream */;\\n}\\n\\n/* Equivalent Vim's Operator group. */\\n.cm-s-abbott span.cm-operator { font-weight: bold; }\\n\\n/* Roughly equivalent to Vim's Identifier group. */\\n.cm-s-abbott span.cm-def,\\n.cm-s-abbott span.cm-variable,\\n.cm-s-abbott span.cm-variable-2,\\n.cm-s-abbott span.cm-variable-3 {\\n  color: #8ccdf0 /* periwinkle_blue */;\\n}\\n\\n/* Roughly equivalent to Vim's Function group. */\\n.cm-s-abbott span.cm-builtin,\\n.cm-s-abbott span.cm-property,\\n.cm-s-abbott span.cm-qualifier {\\n  color: #3f91f1 /* cornflower_blue */;\\n}\\n\\n/* Equivalent to Vim's Type group. */\\n.cm-s-abbott span.cm-type { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's Keyword group. */\\n.cm-s-abbott span.cm-keyword {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's PreProc group. */\\n.cm-s-abbott span.cm-meta { color: #ec6c99 /* french_pink */; }\\n\\n/* Equivalent to Vim's htmlTagName group (linked to Statement). */\\n.cm-s-abbott span.cm-tag {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's htmlArg group (linked to Type). */\\n.cm-s-abbott span.cm-attribute { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's htmlH1, markdownH1, etc. groups (linked to Title). */\\n.cm-s-abbott span.cm-header {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's markdownRule group (linked to PreProc). */\\n.cm-s-abbott span.cm-hr { color: #ec6c99 /* french_pink */; }\\n\\n/* Roughly equivalent to Vim's Underlined group. */\\n.cm-s-abbott span.cm-link { color: #e6a2f3 /* lavender */; }\\n\\n/* Equivalent to Vim's diffRemoved group. */\\n.cm-s-abbott span.cm-negative {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Equivalent to Vim's diffAdded group. */\\n.cm-s-abbott span.cm-positive {\\n  background: #a0ea00 /* chartreuse */;\\n  color: #231c14 /* bistre */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's Error group. */\\n.cm-s-abbott span.cm-error {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Style addons: */\\n\\n/* Equivalent to Vim's MatchParen group. */\\n.cm-s-abbott span.CodeMirror-matchingbracket {\\n  background: #745d42 /* cocoa */ !important;\\n  color: #231c14 /* bistre */ !important;\\n  font-weight: bold;\\n}\\n\\n/*\\n * Roughly equivalent to Vim's Error group. (Vim doesn't seem to have a direct\\n * equivalent in its own matchparen plugin, but many syntax highlighting plugins\\n * mark mismatched brackets as Error.)\\n */\\n.cm-s-abbott span.CodeMirror-nonmatchingbracket {\\n  background: #d80450 /* crimson */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n.cm-s-abbott .CodeMirror-matchingtag,\\n.cm-s-abbott .cm-matchhighlight {\\n  outline: 1px solid #39a78d /* zomp */;\\n}\\n\\n/* Equivalent to Vim's CursorLine group. */\\n.cm-s-abbott .CodeMirror-activeline-background,\\n.cm-s-abbott .CodeMirror-activeline-gutter {\\n  background: #3c3022 /* chocolate */;\\n}\\n\\n/* Equivalent to Vim's CursorLineNr group. */\\n.cm-s-abbott .CodeMirror-activeline-gutter .CodeMirror-linenumber {\\n  color: #d8ff84 /* pastel_chartreuse */;\\n  font-weight: bold;\\n}\\n\\n/* Roughly equivalent to Vim's Folded group. */\\n.cm-s-abbott .CodeMirror-foldmarker {\\n  color: #f63f05 /* cinnabar */;\\n  text-shadow: none;\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/codemirror/theme/abbott.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../node_modules/codemirror/theme/abbott.css":
/*!***************************************************!*\
  !*** ../node_modules/codemirror/theme/abbott.css ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var content = __webpack_require__(/*! !!../../css-loader/dist/cjs.js!./abbott.css */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/codemirror/theme/abbott.css\");\ncontent = content.__esModule ? content.default : content;\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/codemirror/theme/abbott.css?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar stylesInDom = {};\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nfunction listToStyles(list, options) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\nfunction addStylesToDom(styles, options) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i];\n    var domStyle = stylesInDom[item.id];\n    var j = 0;\n\n    if (domStyle) {\n      domStyle.refs++;\n\n      for (; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j]);\n      }\n\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j], options));\n      }\n    } else {\n      var parts = [];\n\n      for (; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j], options));\n      }\n\n      stylesInDom[item.id] = {\n        id: item.id,\n        refs: 1,\n        parts: parts\n      };\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      options.attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(options.attributes).forEach(function (key) {\n    style.setAttribute(key, options.attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  var styles = listToStyles(list, options);\n  addStylesToDom(styles, options);\n  return function update(newList) {\n    var mayRemove = [];\n\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n    }\n\n    if (newList) {\n      var newStyles = listToStyles(newList, options);\n      addStylesToDom(newStyles, options);\n    }\n\n    for (var _i = 0; _i < mayRemove.length; _i++) {\n      var _domStyle = mayRemove[_i];\n\n      if (_domStyle.refs === 0) {\n        for (var j = 0; j < _domStyle.parts.length; j++) {\n          _domStyle.parts[j]();\n        }\n\n        delete stylesInDom[_domStyle.id];\n      }\n    }\n  };\n};\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ })

}]);