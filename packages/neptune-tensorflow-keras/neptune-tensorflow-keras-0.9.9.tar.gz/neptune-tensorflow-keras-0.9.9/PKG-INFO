Metadata-Version: 2.1
Name: neptune-tensorflow-keras
Version: 0.9.9
Summary: Neptune.ai tensorflow-keras integration library
Home-page: https://neptune.ai/
Author: neptune.ai
Author-email: contact@neptune.ai
License: Apache License 2.0
Project-URL: Tracker, https://github.com/neptune-ai/neptune-tensorflow-keras/issues
Project-URL: Source, https://github.com/neptune-ai/neptune-tensorflow-keras
Project-URL: Documentation, https://docs.neptune.ai/integrations-and-supported-tools/model-training/tensorflow-keras
Description: # Neptune: Tensorflow and Keras integration
        
        See [the official docs](https://docs.neptune.ai/integrations-and-supported-tools/model-training/tensorflow-keras).
        
        Minimal example:
        
        ```python
        import tensorflow as tf
        import neptune.new as neptune
        from neptune.new.integrations.tensorflow_keras import NeptuneCallback
        
        run = neptune.init(project='common/tf-keras-integration', api_token='ANONYMOUS')
        
        mnist = tf.keras.datasets.mnist
        (x_train, y_train),(x_test, y_test) = mnist.load_data()
        x_train, x_test = x_train / 255.0, x_test / 255.0
        
        model = tf.keras.models.Sequential([
          tf.keras.layers.Flatten(),
          tf.keras.layers.Dense(256, activation=tf.keras.activations.relu),
          tf.keras.layers.Dropout(0.5),
          tf.keras.layers.Dense(10, activation=tf.keras.activations.softmax)
        ])
        
        optimizer = tf.keras.optimizers.SGD(lr=0.005, momentum=0.4,)
        
        model.compile(optimizer=optimizer,
                      loss='sparse_categorical_crossentropy',
                      metrics=['accuracy'])
        
        neptune_cbk = NeptuneCallback(run=run, base_namespace='metrics')
        model.fit(x_train, y_train,
                  epochs=5,
                  batch_size=64,
                  callbacks=[neptune_cbk])
        ```
Keywords: MLOps,ML Experiment Tracking,ML Model Registry,ML Model Store,ML Metadata Store
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Description-Content-Type: text/markdown
Provides-Extra: all
