{"version":3,"sources":["ThemeProvider.tsx","MediaStreamPlayer.tsx","Placeholder.tsx","media-constraint.ts","component-value.ts","WebRtcStreamer.tsx","index.tsx","DeviceSelector.tsx"],"names":["ThemeProvider","props","stTheme","theme","muiTheme","React","useMemo","textColorScale","chroma","scale","textColor","backgroundColor","mode","createMuiTheme","palette","primary","main","primaryColor","background","default","paper","secondaryBackgroundColor","text","secondary","hex","disabled","typography","fontFamily","font","children","MediaStreamPlayer","useEffect","Streamlit","setFrameHeight","hasVideo","stream","getVideoTracks","length","refCallback","useCallback","node","srcObject","refreshFrameHeight","videoProps","hidden","userDefinedVideoAttrs","style","autoPlay","controls","controlsList","crossOrigin","loop","mediaGroup","muted","playsInline","preload","height","poster","width","disablePictureInPicture","disableRemotePlayback","ref","onCanPlay","audioProps","userDefinedAudioAttrs","memo","useStyles","makeStyles","padding","spacing","display","justifyContent","alignItems","Placeholder","classes","Paper","className","elevation","loading","CircularProgress","fontSize","compileMediaConstraints","src","videoDeviceId","audioDeviceId","constraints","video","deviceId","audio","setComponentValue","componentValue","isWebRtcMode","val","setupOffer","pc","createOffer","then","offer","console","log","setLocalDescription","Promise","resolve","iceGatheringState","addEventListener","checkState","removeEventListener","localDescription","catch","err","error","WebRtcStreamer","signallingTimer","processAnswerInner","sdpAnswerJson","a","sdpAnswer","JSON","parse","setRemoteDescription","processAnswer","clearTimeout","setState","webRtcState","sdpOffer","stop","startInner","args","Error","config","rtc_configuration","RTCPeerConnection","evt","streams","media_stream_constraints","state","videoInput","audioInput","navigator","mediaDevices","getUserMedia","getTracks","forEach","track","addTrack","getTransceivers","direction","addTransceiver","start","signallingTimedOut","setTimeout","stopInner","undefined","transceiver","getSenders","sender","close","finally","reconcilePlayingState","desiredPlayingState","initializeComponentValue","playing","reconcileComponentValue","prevState","playingChanged","prevSdpOffer","toJSON","handleDeviceSelect","render","constraintsFromPython","buttonDisabled","videoEnabled","audioEnabled","receivable","isReceivable","transmittable","isTransmittable","Box","Alert","severity","name","message","py","video_html_attrs","audio_html_attrs","Button","variant","onClick","color","DeviceSelector","onSelect","value","this","prevProps","remoteDescription","StreamlitComponentBase","withStreamlitConnection","overrides","MuiCssBaseline","body","ReactDOM","StrictMode","CssBaseline","document","getElementById","formControl","maxWidth","margin","minWidth","formButtonControl","marginBottom","selectEmpty","marginTop","DeviceSelecter","labelId","devices","onChangeProp","onChange","e","selected","find","d","target","aria-label","setImmediate","map","device","label","DeviceSelectPopper","open","anchorEl","devicesMap","onSubmit","useState","selectedVideo","setSelectedVideo","selectedAudio","setSelectedAudio","handleSubmit","preventDefault","originalBodyHeightRef","useRef","popperRefFn","popper","getElementsByTagName","current","window","getComputedStyle","scrollBottom","WebKitCSSMatrix","transform","m42","getBoundingClientRect","scrollHeight","placement","id","type","setOpen","setAnchorEl","setDevicesMap","unavailable","setUnavailable","onOpen","event","currentTarget","enumerateDevices","vidoeDevices","audioDevices","kind","push","onClose"],"mappings":"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","file":"static/js/main.798f92f8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"streamlit-component-lib\";\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@material-ui/core/styles\";\nimport chroma from \"chroma-js\";\n\ninterface StreamlitThemeProviderProps {\n  theme: Theme | undefined;\n}\nexport const ThemeProvider: React.VFC<\n  React.PropsWithChildren<StreamlitThemeProviderProps>\n> = (props) => {\n  const stTheme = props.theme;\n\n  const muiTheme = React.useMemo(() => {\n    if (stTheme == null) {\n      return undefined;\n    }\n\n    const textColorScale = chroma\n      .scale([stTheme.textColor, stTheme.backgroundColor])\n      .mode(\"lab\");\n\n    return createMuiTheme({\n      palette: {\n        primary: {\n          main: stTheme.primaryColor,\n        },\n        background: {\n          default: stTheme.backgroundColor,\n          paper: stTheme.secondaryBackgroundColor,\n        },\n        text: {\n          primary: stTheme.textColor,\n          secondary: textColorScale(0.1).hex(),\n          disabled: textColorScale(0.5).hex(),\n        },\n      },\n      typography: {\n        fontFamily: stTheme.font,\n      },\n    });\n  }, [stTheme]);\n\n  if (muiTheme == null) {\n    return <>{props.children}</>;\n  }\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, {\n  useEffect,\n  useCallback,\n  VideoHTMLAttributes,\n  AudioHTMLAttributes,\n  HTMLAttributes,\n} from \"react\";\n\ntype UserDefinedHTMLVideoAttributes = Partial<\n  Omit<\n    VideoHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\ntype UserDefinedHTMLAudioAttributes = Partial<\n  Omit<\n    AudioHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\n\ninterface MediaStreamPlayerProps {\n  stream: MediaStream;\n  userDefinedVideoAttrs: UserDefinedHTMLVideoAttributes | undefined;\n  userDefinedAudioAttrs: UserDefinedHTMLAudioAttributes | undefined;\n}\nconst MediaStreamPlayer: React.VFC<MediaStreamPlayerProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const hasVideo = props.stream.getVideoTracks().length > 0;\n\n  const refCallback = useCallback(\n    (node: HTMLVideoElement | HTMLAudioElement | null) => {\n      if (node) {\n        node.srcObject = props.stream;\n      }\n    },\n    [props.stream]\n  );\n\n  const refreshFrameHeight = useCallback(() => Streamlit.setFrameHeight(), []);\n\n  if (hasVideo) {\n    // NOTE: Enumerate all allowed props instead of simply using spread operator\n    //       passing all the fields in props.userDefinedVideoAttrs\n    //       in order to block unexpected fields especially like dangerouslySetInnerHTML.\n    const videoProps: VideoHTMLAttributes<HTMLVideoElement> = {\n      hidden: props.userDefinedVideoAttrs?.hidden,\n      style: props.userDefinedVideoAttrs?.style,\n      autoPlay: props.userDefinedVideoAttrs?.autoPlay,\n      controls: props.userDefinedVideoAttrs?.controls,\n      controlsList: props.userDefinedVideoAttrs?.controlsList,\n      crossOrigin: props.userDefinedVideoAttrs?.crossOrigin,\n      loop: props.userDefinedVideoAttrs?.loop,\n      mediaGroup: props.userDefinedVideoAttrs?.mediaGroup,\n      muted: props.userDefinedVideoAttrs?.muted,\n      playsInline: props.userDefinedVideoAttrs?.playsInline,\n      preload: props.userDefinedVideoAttrs?.preload,\n      height: props.userDefinedVideoAttrs?.height,\n      poster: props.userDefinedVideoAttrs?.poster,\n      width: props.userDefinedVideoAttrs?.width,\n      disablePictureInPicture:\n        props.userDefinedVideoAttrs?.disablePictureInPicture,\n      disableRemotePlayback: props.userDefinedVideoAttrs?.disableRemotePlayback,\n    };\n\n    return (\n      <video {...videoProps} ref={refCallback} onCanPlay={refreshFrameHeight} />\n    );\n  } else {\n    const audioProps: AudioHTMLAttributes<HTMLAudioElement> = {\n      hidden: props.userDefinedAudioAttrs?.hidden,\n      style: props.userDefinedAudioAttrs?.style,\n      autoPlay: props.userDefinedAudioAttrs?.autoPlay,\n      controls: props.userDefinedAudioAttrs?.controls,\n      controlsList: props.userDefinedAudioAttrs?.controlsList,\n      crossOrigin: props.userDefinedAudioAttrs?.crossOrigin,\n      loop: props.userDefinedAudioAttrs?.loop,\n      mediaGroup: props.userDefinedAudioAttrs?.mediaGroup,\n      muted: props.userDefinedAudioAttrs?.muted,\n      playsInline: props.userDefinedAudioAttrs?.playsInline,\n      preload: props.userDefinedAudioAttrs?.preload,\n    };\n    return <audio ref={refCallback} {...audioProps} />;\n  }\n};\n\nexport default React.memo(MediaStreamPlayer);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport VideoLabelIcon from \"@material-ui/icons/VideoLabel\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\ninterface PlaceholderProps {\n  loading: boolean;\n}\nconst Placeholder: React.VFC<PlaceholderProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <VideoLabelIcon fontSize=\"large\" />\n      )}\n    </Paper>\n  );\n};\n\nexport default React.memo(Placeholder);\n","export function compileMediaConstraints(\n  src: MediaStreamConstraints | undefined,\n  videoDeviceId: string | undefined,\n  audioDeviceId: string | undefined\n): MediaStreamConstraints {\n  const constraints = src || {};\n\n  if (videoDeviceId) {\n    if (constraints.video === true) {\n      constraints.video = {\n        deviceId: videoDeviceId,\n      };\n    } else if (\n      typeof constraints.video === \"object\" ||\n      constraints.video == null\n    ) {\n      constraints.video = {\n        ...constraints.video,\n        deviceId: videoDeviceId,\n      };\n    }\n  }\n\n  if (audioDeviceId) {\n    if (constraints.audio === true) {\n      constraints.audio = {\n        deviceId: audioDeviceId,\n      };\n    } else if (\n      typeof constraints.audio === \"object\" ||\n      constraints.audio == null\n    ) {\n      constraints.audio = {\n        ...constraints.audio,\n        deviceId: audioDeviceId,\n      };\n    }\n  }\n\n  return constraints;\n}\n\ninterface MediaUsage {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n}\nexport function getMediaUsage(constraintsFromPython: any): MediaUsage {\n  const videoEnabled = constraintsFromPython\n    ? !!constraintsFromPython.video\n    : true;\n  const audioEnabled = constraintsFromPython\n    ? !!constraintsFromPython.audio\n    : true;\n\n  return { videoEnabled, audioEnabled };\n}\n","import { Streamlit } from \"streamlit-component-lib\";\n\nexport interface ComponentValue {\n  playing: boolean;\n  sdpOffer: string; // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so an empty string will be used here for that purpose. // TODO: Create an issue\n}\n\nexport function setComponentValue(componentValue: ComponentValue) {\n  return Streamlit.setComponentValue(componentValue);\n}\n","import {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DeviceSelector from \"./DeviceSelector\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport MediaStreamPlayer from \"./MediaStreamPlayer\";\nimport Placeholder from \"./Placeholder\";\nimport { compileMediaConstraints, getMediaUsage } from \"./media-constraint\";\nimport { setComponentValue } from \"./component-value\";\n\ntype WebRtcMode = \"RECVONLY\" | \"SENDONLY\" | \"SENDRECV\";\nconst isWebRtcMode = (val: unknown): val is WebRtcMode =>\n  val === \"RECVONLY\" || val === \"SENDONLY\" || val === \"SENDRECV\";\nconst isReceivable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"RECVONLY\";\nconst isTransmittable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"SENDONLY\";\n\nconst setupOffer = (\n  pc: RTCPeerConnection\n): Promise<RTCSessionDescription | null> => {\n  return pc\n    .createOffer()\n    .then((offer) => {\n      console.log(\"Created offer:\", offer);\n      return pc.setLocalDescription(offer);\n    })\n    .then(() => {\n      console.log(\"Wait for ICE gethering...\");\n      // Wait for ICE gathering to complete\n      return new Promise<void>((resolve) => {\n        if (pc.iceGatheringState === \"complete\") {\n          resolve();\n        } else {\n          const checkState = () => {\n            if (pc.iceGatheringState === \"complete\") {\n              pc.removeEventListener(\"icegatheringstatechange\", checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener(\"icegatheringstatechange\", checkState);\n        }\n      });\n    })\n    .then(() => {\n      const offer = pc.localDescription;\n      return offer;\n    })\n    .catch((err) => {\n      console.error(err);\n      throw err;\n    });\n};\n\ntype WebRtcState = \"STOPPED\" | \"SIGNALLING\" | \"PLAYING\" | \"STOPPING\";\n\ninterface State {\n  webRtcState: WebRtcState;\n  sdpOffer: RTCSessionDescription | null;\n  signallingTimedOut: boolean;\n  videoInput: MediaDeviceInfo | null;\n  audioInput: MediaDeviceInfo | null;\n  stream: MediaStream | null;\n  error: Error | null;\n}\n\nconst SIGNALLING_TIMEOUT = 10 * 1000;\n\nclass WebRtcStreamer extends StreamlitComponentBase<State> {\n  private pc: RTCPeerConnection | undefined;\n  private signallingTimer: NodeJS.Timeout | undefined;\n\n  constructor(props: ComponentProps) {\n    super(props);\n\n    this.state = {\n      webRtcState: \"STOPPED\",\n      sdpOffer: null,\n      signallingTimedOut: false,\n      videoInput: null,\n      audioInput: null,\n      stream: null,\n      error: null,\n    };\n  }\n\n  private processAnswerInner = async (\n    pc: RTCPeerConnection,\n    sdpAnswerJson: string\n  ): Promise<void> => {\n    const sdpAnswer = JSON.parse(sdpAnswerJson);\n    console.log(\"Receive answer sdpOffer\", sdpAnswer);\n    await pc.setRemoteDescription(sdpAnswer);\n    console.log(\"Remote description is set\");\n  };\n\n  private processAnswer = (\n    pc: RTCPeerConnection,\n    sdpAnswerJson: string\n  ): void => {\n    this.processAnswerInner(pc, sdpAnswerJson)\n      .then(() => {\n        if (this.signallingTimer) {\n          clearTimeout(this.signallingTimer);\n        }\n        this.setState({\n          webRtcState: \"PLAYING\",\n          sdpOffer: null,\n        });\n      })\n      .catch((error) => {\n        this.setState({ error });\n        this.stop();\n      });\n  };\n\n  private startInner = async () => {\n    const mode = this.props.args[\"mode\"];\n    if (!isWebRtcMode(mode)) {\n      throw new Error(`Invalid mode ${mode}`);\n    }\n\n    this.setState({\n      webRtcState: \"SIGNALLING\",\n      stream: null,\n      error: null,\n    });\n\n    const config: RTCConfiguration = this.props.args.rtc_configuration || {};\n    console.log(\"RTCConfiguration:\", config);\n    const pc = new RTCPeerConnection(config);\n\n    // Connect received audio / video to DOM elements\n    if (mode === \"SENDRECV\" || mode === \"RECVONLY\") {\n      pc.addEventListener(\"track\", (evt) => {\n        const stream = evt.streams[0]; // TODO: Handle multiple streams\n        this.setState({\n          stream,\n        });\n      });\n    }\n\n    // Set up transceivers\n    if (mode === \"SENDRECV\" || mode === \"SENDONLY\") {\n      const constraints = compileMediaConstraints(\n        this.props.args.media_stream_constraints,\n        this.state.videoInput?.deviceId,\n        this.state.audioInput?.deviceId\n      );\n      console.log(\"MediaStreamConstraints:\", constraints);\n\n      if (constraints.audio || constraints.video) {\n        if (navigator.mediaDevices == null) {\n          // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#privacy_and_security\n          // > A secure context is, in short, a page loaded using HTTPS or the file:/// URL scheme, or a page loaded from localhost.\n          throw new Error(\n            \"navigator.mediaDevices is undefined. It seems the current document is not loaded securely.\"\n          );\n        }\n        if (navigator.mediaDevices.getUserMedia == null) {\n          throw new Error(\"getUserMedia is not implemented in this browser\");\n        }\n\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        stream.getTracks().forEach((track) => {\n          pc.addTrack(track, stream);\n        });\n      }\n\n      if (mode === \"SENDONLY\") {\n        for (const transceiver of pc.getTransceivers()) {\n          transceiver.direction = \"sendonly\";\n        }\n      }\n    } else if (mode === \"RECVONLY\") {\n      pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n      pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n    }\n\n    console.log(\"transceivers\", pc.getTransceivers());\n\n    this.pc = pc;\n\n    await setupOffer(pc).then((offer) => {\n      if (offer == null) {\n        throw new Error(\"Failed to create an offer SDP\");\n      }\n\n      this.setState({\n        sdpOffer: offer,\n      });\n    });\n  };\n\n  private start = (): void => {\n    if (this.state.webRtcState !== \"STOPPED\") {\n      return;\n    }\n\n    this.setState({ signallingTimedOut: false });\n    this.signallingTimer = setTimeout(() => {\n      this.setState({ signallingTimedOut: true });\n    }, SIGNALLING_TIMEOUT);\n\n    this.startInner().catch((error) =>\n      this.setState({ webRtcState: \"STOPPED\", sdpOffer: null, error })\n    );\n  };\n\n  private stopInner = async (): Promise<void> => {\n    if (this.state.webRtcState === \"STOPPING\") {\n      return;\n    }\n\n    const pc = this.pc;\n    this.pc = undefined;\n\n    this.setState({ webRtcState: \"STOPPING\", sdpOffer: null });\n\n    if (pc == null) {\n      return;\n    }\n\n    // close transceivers\n    if (pc.getTransceivers) {\n      pc.getTransceivers().forEach(function (transceiver) {\n        if (transceiver.stop) {\n          transceiver.stop();\n        }\n      });\n    }\n\n    // close local audio / video\n    pc.getSenders().forEach(function (sender) {\n      sender.track?.stop();\n    });\n\n    // close peer connection\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        pc.close();\n        resolve();\n      }, 500);\n    });\n  };\n\n  private stop = () => {\n    this.stopInner()\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        this.setState({\n          webRtcState: \"STOPPED\",\n          sdpOffer: null,\n          stream: null,\n        });\n      });\n  };\n\n  private reconcilePlayingState = () => {\n    const desiredPlayingState = this.props.args[\"desired_playing_state\"];\n    if (desiredPlayingState != null) {\n      if (\n        desiredPlayingState === true &&\n        this.state.webRtcState === \"STOPPED\"\n      ) {\n        this.start();\n      } else if (\n        desiredPlayingState === false &&\n        (this.state.webRtcState === \"SIGNALLING\" ||\n          this.state.webRtcState === \"PLAYING\")\n      ) {\n        this.stop();\n      }\n    }\n  };\n\n  private initializeComponentValue = () => {\n    return setComponentValue({\n      playing: false,\n      sdpOffer: \"\",\n    });\n  };\n\n  private reconcileComponentValue = (prevState: State) => {\n    if (this.state === prevState) {\n      return;\n    }\n\n    const playing = this.state.webRtcState === \"PLAYING\";\n    const prevPlaying = prevState.webRtcState === \"PLAYING\";\n    const playingChanged = playing !== prevPlaying;\n\n    const sdpOffer = this.state.sdpOffer;\n    const prevSdpOffer = prevState.sdpOffer;\n    const sdpOfferChanged = sdpOffer !== prevSdpOffer;\n\n    if (playingChanged || sdpOfferChanged) {\n      if (sdpOffer) {\n        console.log(\"Send SDP offer\", sdpOffer);\n      }\n      setComponentValue({\n        playing,\n        sdpOffer: sdpOffer ? sdpOffer.toJSON() : \"\", // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so here an empty string is set instead when `sdpOffer` is undefined. // TODO: Create an issue\n      });\n    }\n  };\n\n  public componentDidMount() {\n    super.componentDidMount();\n\n    this.initializeComponentValue();\n    this.reconcilePlayingState();\n  }\n\n  // @ts-ignore  // TODO: Fix the base class definition\n  public componentDidUpdate(prevProps: ComponentProps, prevState: State) {\n    super.componentDidUpdate();\n\n    this.reconcilePlayingState();\n\n    this.reconcileComponentValue(prevState);\n\n    if (this.pc == null) {\n      return;\n    }\n    const pc = this.pc;\n    if (pc.remoteDescription == null) {\n      const sdpAnswerJson = this.props.args[\"sdp_answer_json\"];\n      const prevSdpAnswerJson = prevProps.args[\"sdp_answer_json\"];\n      const sdpAnswerJsonChanged = sdpAnswerJson !== prevSdpAnswerJson;\n      if (sdpAnswerJsonChanged) {\n        if (sdpAnswerJson && this.state.webRtcState === \"SIGNALLING\") {\n          this.processAnswer(pc, sdpAnswerJson);\n        }\n      }\n    }\n  }\n\n  private handleDeviceSelect = (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => {\n    this.setState({ videoInput: video, audioInput: audio });\n  };\n\n  public render = (): ReactNode => {\n    const desiredPlayingState = this.props.args[\"desired_playing_state\"];\n    const buttonDisabled =\n      this.props.disabled ||\n      (this.state.webRtcState === \"SIGNALLING\" &&\n        !this.state.signallingTimedOut) || // Users can click the stop button after signalling timed out.\n      this.state.webRtcState === \"STOPPING\" ||\n      desiredPlayingState != null;\n    const mode = this.props.args[\"mode\"];\n    const { videoEnabled, audioEnabled } = getMediaUsage(\n      this.props.args.media_stream_constraints\n    );\n    const receivable = isWebRtcMode(mode) && isReceivable(mode);\n    const transmittable = isWebRtcMode(mode) && isTransmittable(mode);\n\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <Box>\n          {this.state.error && (\n            <Alert severity=\"error\">\n              {this.state.error.name}: {this.state.error.message}\n            </Alert>\n          )}\n          <Box py={1} display=\"flex\">\n            {this.state.stream ? (\n              <MediaStreamPlayer\n                stream={this.state.stream}\n                userDefinedVideoAttrs={this.props.args.video_html_attrs}\n                userDefinedAudioAttrs={this.props.args.audio_html_attrs}\n              />\n            ) : (\n              receivable && (\n                <Placeholder\n                  loading={this.state.webRtcState === \"SIGNALLING\"}\n                />\n              )\n            )}\n          </Box>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {this.state.webRtcState === \"PLAYING\" ||\n            this.state.webRtcState === \"SIGNALLING\" ? (\n              <Button\n                variant=\"contained\"\n                onClick={this.stop}\n                disabled={buttonDisabled}\n              >\n                Stop\n              </Button>\n            ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.start}\n                disabled={buttonDisabled}\n              >\n                Start\n              </Button>\n            )}\n            {transmittable && (\n              <DeviceSelector\n                videoEnabled={videoEnabled}\n                audioEnabled={audioEnabled}\n                onSelect={this.handleDeviceSelect}\n                value={{\n                  video: this.state.videoInput,\n                  audio: this.state.audioInput,\n                }}\n              />\n            )}\n          </Box>\n        </Box>\n      </ThemeProvider>\n    );\n  };\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(WebRtcStreamer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport WebRtcStreamer from \"./WebRtcStreamer\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          // Unset the background-color since <CssBaseLine /> applies the default Material Design background color\n          // (https://material-ui.com/components/css-baseline/#approach),\n          // which however does not match the Streamlit's background.\n          backgroundColor: \"initial\",\n        },\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <WebRtcStreamer />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select, { SelectProps } from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popper, { PopperProps } from \"@material-ui/core/Popper\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    maxWidth: \"80vw\",\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  formButtonControl: {\n    margin: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ninterface DevicesMap {\n  audio: MediaDeviceInfo[];\n  video: MediaDeviceInfo[];\n}\n\ninterface DeviceSelecterProps {\n  labelId: SelectProps[\"labelId\"];\n  value: MediaDeviceInfo | null;\n  devices: MediaDeviceInfo[];\n  onChange: (device: MediaDeviceInfo | null) => void;\n}\nconst DeviceSelecter = ({\n  labelId,\n  value,\n  devices,\n  onChange: onChangeProp,\n}: DeviceSelecterProps) => {\n  const classes = useStyles();\n\n  const onChange = useCallback<NonNullable<SelectProps[\"onChange\"]>>(\n    (e) => {\n      const selected = devices.find((d) => d.deviceId === e.target.value);\n      onChangeProp(selected || null);\n    },\n    [devices, onChangeProp]\n  );\n\n  if (devices.length === 0) {\n    return (\n      <Select value=\"\" disabled>\n        <option aria-label=\"None\" value=\"\" />\n      </Select>\n    );\n  }\n\n  if (value == null) {\n    setImmediate(() => onChangeProp(devices[0]));\n    return null;\n  }\n\n  return (\n    <Select\n      labelId={labelId}\n      value={value.deviceId}\n      onChange={onChange}\n      className={classes.selectEmpty}\n    >\n      {devices.map((device) => (\n        <MenuItem key={device.deviceId} value={device.deviceId}>\n          {device.label}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\ninterface DeviceSelectPopperProps {\n  open: boolean;\n  anchorEl: PopperProps[\"anchorEl\"];\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  devicesMap: DevicesMap;\n  onSubmit: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelectPopper = ({\n  open,\n  anchorEl,\n  videoEnabled,\n  audioEnabled,\n  value,\n  devicesMap,\n  onSubmit,\n}: DeviceSelectPopperProps) => {\n  const [selectedVideo, setSelectedVideo] = useState<MediaDeviceInfo | null>(\n    null\n  );\n  const [selectedAudio, setSelectedAudio] = useState<MediaDeviceInfo | null>(\n    null\n  );\n\n  useEffect(() => {\n    setSelectedVideo(\n      devicesMap.video.find((d) => d.deviceId === value.video?.deviceId) || null\n    );\n    setSelectedAudio(\n      devicesMap.audio.find((d) => d.deviceId === value.audio?.deviceId) || null\n    );\n  }, [devicesMap, value]);\n\n  const handleSubmit = useCallback<\n    NonNullable<React.ComponentProps<\"form\">[\"onSubmit\"]>\n  >(\n    (e) => {\n      e.preventDefault();\n      onSubmit(\n        videoEnabled ? selectedVideo : null,\n        audioEnabled ? selectedAudio : null\n      );\n    },\n    [onSubmit, videoEnabled, audioEnabled, selectedVideo, selectedAudio]\n  );\n\n  const classes = useStyles();\n\n  const originalBodyHeightRef = useRef<string>();\n  const popperRefFn = useCallback((popper: HTMLDivElement | null) => {\n    // Manage <body>'s height reacting to popper appearance.\n    if (popper) {\n      setTimeout(() => {\n        const body = document.getElementsByTagName(\"body\")[0];\n        originalBodyHeightRef.current = body.style.height;\n\n        const style = window.getComputedStyle(popper);\n        const matrix = new WebKitCSSMatrix(style.transform);\n        const translateY = matrix.m42;\n\n        const scrollBottom = translateY + popper.getBoundingClientRect().height;\n        if (scrollBottom > document.body.scrollHeight) {\n          body.style.height = `${scrollBottom}px`;\n          Streamlit.setFrameHeight();\n        }\n      }, 0);\n    } else {\n      const body = document.getElementsByTagName(\"body\")[0];\n      if (originalBodyHeightRef.current != null) {\n        body.style.height = originalBodyHeightRef.current;\n      }\n      Streamlit.setFrameHeight();\n    }\n  }, []);\n\n  return (\n    <Popper\n      ref={popperRefFn}\n      open={open}\n      anchorEl={anchorEl}\n      placement=\"left-end\"\n    >\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          {videoEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"video-input-select\">Video input</InputLabel>\n              <DeviceSelecter\n                labelId=\"video-input-select\"\n                devices={devicesMap.video}\n                value={selectedVideo}\n                onChange={setSelectedVideo}\n              />\n            </FormControl>\n          )}\n          {audioEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"audio-input-select\">Audio input</InputLabel>\n              <DeviceSelecter\n                labelId=\"audio-input-select\"\n                devices={devicesMap.audio}\n                value={selectedAudio}\n                onChange={setSelectedAudio}\n              />\n            </FormControl>\n          )}\n          <FormControl className={classes.formButtonControl}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              OK\n            </Button>\n          </FormControl>\n        </form>\n      </Paper>\n    </Popper>\n  );\n};\n\ninterface DeviceSelectorProps {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  onSelect: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelector = ({\n  videoEnabled,\n  audioEnabled,\n  value,\n  onSelect,\n}: DeviceSelectorProps) => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [devicesMap, setDevicesMap] = useState<DevicesMap>();\n  const [unavailable, setUnavailable] = useState(false);\n\n  const onOpen = useCallback<NonNullable<ButtonProps[\"onClick\"]>>((event) => {\n    setAnchorEl(event.currentTarget);\n\n    if (typeof navigator?.mediaDevices?.enumerateDevices !== \"function\") {\n      setDevicesMap(undefined);\n      setUnavailable(true);\n      return;\n    }\n\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const vidoeDevices = [];\n      const audioDevices = [];\n      for (const device of devices) {\n        if (device.kind === \"videoinput\") {\n          vidoeDevices.push(device);\n        } else if (device.kind === \"audioinput\") {\n          audioDevices.push(device);\n        }\n      }\n      setDevicesMap({\n        video: vidoeDevices,\n        audio: audioDevices,\n      });\n      setOpen(true);\n    });\n  }, []);\n  const onClose = useCallback(() => setOpen(false), []);\n\n  const onSubmit = useCallback(\n    (video: MediaDeviceInfo | null, audio: MediaDeviceInfo | null) => {\n      setDevicesMap(undefined);\n      setOpen(false);\n      onSelect(video, audio);\n    },\n    [onSelect]\n  );\n\n  return (\n    <Box>\n      {unavailable && <p>Unavailable</p>}\n      {devicesMap && (\n        <DeviceSelectPopper\n          open={open}\n          anchorEl={anchorEl}\n          videoEnabled={videoEnabled}\n          audioEnabled={audioEnabled}\n          value={value}\n          devicesMap={devicesMap}\n          onSubmit={onSubmit}\n        />\n      )}\n      <Button onClick={open ? onClose : onOpen}>Select device</Button>\n    </Box>\n  );\n};\n\nexport default React.memo(DeviceSelector);\n"],"sourceRoot":""}